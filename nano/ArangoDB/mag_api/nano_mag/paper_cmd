db._useDatabase('test');
db._create('paper');
db._createEdgeCollection('author_of')

var person_id,paper_id

var problem_map2 = Object.create(null);
problem_map2['王文俊']='2801557857' 
problem_map2['郭建宏']='2574358011' 
problem_map2['曹昱']='2713448962' 
problem_map2['陳樹群']='2148036750' 
problem_map2['楊明德']='2164335109' 
problem_map2['李蔡彥']='2138428116' 
var problem_map3 = Object.create(null);
problem_map3['張添烜']='tiansheuan chang' 
problem_map3['杭學鳴']='hsuehming hang' 

//----- 郭峻因 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2906437927" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2906437927", title:"隨意貼 以視覺應用為主之超低耗電穿戴式裝置晶片系統與軟體研究 ii paste ultra low power system and software technologies for vision based wearable devices ii", language:"zh_cht", year:"2016", date:"2016-01-01", citation_cnt:"0", fields:[{name:"wearable technology", mag_id:"54290928"}, {name:"software", mag_id:"2777904410"}, {name:"embedded system", mag_id:"149635348"}, {name:"electric power system", mag_id:"89227174"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"曹孝櫟", mag_id:"2905714939"}, {name:"郭峻因", mag_id:"2905615932"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="曹孝櫟" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2905714939")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"曹孝櫟",MAG_id:"2905714939" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2905615932")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2905615932" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2905623728" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2905623728", title:"智慧視覺系統技術設計諮詢與服務計畫 i design service and consulting on intelligent vision system technology i", language:"zh_cht", year:"2016", date:"2016-01-01", citation_cnt:"0", fields:[{name:"machine vision", mag_id:"5339829"}, {name:"engineering", mag_id:"127413603"}, {name:"computer engineering", mag_id:"113775141"}, ],authors:[{name:"郭峻因", mag_id:"2906616532"}, {name:"陳冠宏", mag_id:"2905680016"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906616532")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2906616532" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳冠宏" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2905680016")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳冠宏",MAG_id:"2905680016" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="839895404" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"839895404", title:"ivvs 智慧車用視訊雷達系統研發計畫 總計畫暨子計畫一 540 度半球狀環場鏡頭陣列視訊合成技術與物件感知之高動態夜視處理技術", language:"zh_cht", year:"2015", date:"2015-01-01", citation_cnt:"0", fields:[{name:"smart camera", mag_id:"161334170"}, {name:"machine vision", mag_id:"5339829"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"computer graphics images", mag_id:"121684516"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"郭峻因", mag_id:"2711530047"}, {name:"guo jiunin", mag_id:"2698729500"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2711530047")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2711530047" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guo jiunin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2698729500")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guo jiunin",MAG_id:"2698729500" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2905852652" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2905852652", title:"智慧型行車安全紀錄系統晶片之關鍵性技術研發 子計畫二 支援全景視訊合成與視訊認證功能之h 264編碼器設計 h 264 video encoder design supporting panoramic video synthesis and video authentication", language:"zh_cht", year:"2013", date:"2013-01-01", citation_cnt:"0", fields:[{name:"encoder", mag_id:"118505674"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"authentication", mag_id:"171289174"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"郭峻因", mag_id:"2906381340"}, {name:"guo jiunin", mag_id:"2906051588"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906381340")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2906381340" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guo jiunin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906051588")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guo jiunin",MAG_id:"2906051588" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1521938204" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1521938204", title:"可超寬調壓之智慧視覺處理晶片系統平台 子計畫六 可超寬調壓系統晶片之智慧視覺處理加速器設計", language:"zh_cht", year:"2013", date:"2013-01-01", citation_cnt:"0", fields:[{name:"smart camera", mag_id:"161334170"}, {name:"engineering", mag_id:"127413603"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer graphics images", mag_id:"121684516"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"郭峻因", mag_id:"2628837607"}, {name:"guo jiunin", mag_id:"2676284620"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2628837607")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2628837607" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guo jiunin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2676284620")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guo jiunin",MAG_id:"2676284620" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1484734845" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1484734845", title:"智慧型行車安全紀錄系統晶片之關鍵性技術研發 子計畫二 支援全景視訊合成與視訊認證功能之h 264編碼器設計", language:"zh_cht", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[{name:"video tracking", mag_id:"202474056"}, {name:"pedestrian detection", mag_id:"2780156472"}, {name:"object class detection", mag_id:"71681937"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"computer graphics images", mag_id:"121684516"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"郭峻因", mag_id:"2686616434"}, {name:"guo jiunin", mag_id:"1769187700"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2686616434")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2686616434" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guo jiunin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1769187700")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guo jiunin",MAG_id:"1769187700" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="798429619" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"798429619", title:"3 d mod 網路立體視訊播放系統 子計畫三 支援可擴充性視角之立體視訊解碼器設計 i", language:"zh_cht", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[{name:"topology", mag_id:"126794175"}, {name:"mod", mag_id:"29231244"}, {name:"mathematics", mag_id:"33923547"}, ],authors:[{name:"郭峻因", mag_id:"2658040899"}, {name:"guo jiunin", mag_id:"2641140110"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2658040899")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2658040899" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guo jiunin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2641140110")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guo jiunin",MAG_id:"2641140110" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2805148634" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2805148634", title:"data receiving device based on optical module", language:"en", year:"2012", date:"2012-10-29", citation_cnt:"0", fields:[{name:"transmission", mag_id:"40827391"}, {name:"serial communication", mag_id:"51707140"}, {name:"physical layer", mag_id:"19247436"}, {name:"optical module", mag_id:"2775954944"}, {name:"gigabit ethernet", mag_id:"2776379158"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, {name:"chip", mag_id:"165005293"}, {name:"boolean algebra", mag_id:"39685927"}, ],authors:[{name:"郭峻因", mag_id:"2806587186"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2806587186")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"2806587186" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="766471579" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"766471579", title:"對我影響至深 至廣的 母校交大", language:"zh_cht", year:"2005", date:"2005-12-01", citation_cnt:"0", fields:[],authors:[{name:"郭峻因", mag_id:"910485907"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("910485907")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"910485907" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1503570177" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1503570177", title:"影像压缩及数据加 解密技术在远程监控系统上的发展与应用 上", language:"zh_chs", year:"2004", date:"2004-01-01", citation_cnt:"0", fields:[{name:"philosophy", mag_id:"138885662"}, {name:"oncology", mag_id:"143998085"}, {name:"internal medicine", mag_id:"126322002"}, ],authors:[{name:"林胜尉", mag_id:"887176802"}, {name:"黄卿铭", mag_id:"270248752"}, {name:"郭峻因", mag_id:"814511339"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林胜尉" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("887176802")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林胜尉",MAG_id:"887176802" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="黄卿铭" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("270248752")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"黄卿铭",MAG_id:"270248752" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭峻因" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("814511339")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭峻因",MAG_id:"814511339" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 蕭旭峰 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1531543210" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1531543210", title:"多視點視訊產生 傳輸與分析 子計畫四 在無線寬頻網路上感官式自由視角視訊之即時瀏覽技術與編碼研究", language:"zh_cht", year:"2014", date:"2014-01-01", citation_cnt:"0", fields:[{name:"multiview video coding", mag_id:"23431618"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"channel code", mag_id:"166366890"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"蕭旭峰", mag_id:"2636936439"}, {name:"hsiao hsufeng", mag_id:"2676135403"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蕭旭峰" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2636936439")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蕭旭峰",MAG_id:"2636936439" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiao hsufeng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2676135403")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiao hsufeng",MAG_id:"2676135403" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1732153154" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1732153154", title:"遍布即時多媒體系統與技術 子計畫六 有線 無線環境上建構於對等連網及內容傳播網之可適性串流技術", language:"zh_cht", year:"2006", date:"2006-01-01", citation_cnt:"0", fields:[{name:"source code", mag_id:"43126263"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, {name:"channel code", mag_id:"166366890"}, ],authors:[{name:"蕭旭峰", mag_id:"2710722284"}, {name:"hsiao hsufeng", mag_id:"1487622444"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蕭旭峰" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2710722284")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蕭旭峰",MAG_id:"2710722284" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiao hsufeng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1487622444")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiao hsufeng",MAG_id:"1487622444" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="931684720" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"931684720", title:"應用於h 264可調式視訊串流之前向糾錯 失真最佳化演算法", language:"zh_cht", year:"2007", date:"2007-01-01", citation_cnt:"0", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"forward error correction", mag_id:"202932441"}, {name:"fx 25 forward error correction", mag_id:"31690431"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"溫維中", mag_id:"2652632492"}, {name:"weichung wen", mag_id:"2689555854"}, {name:"蕭旭峰", mag_id:"2719556949"}, {name:"hsufeng hsiao", mag_id:"2635396387"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="溫維中" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2652632492")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"溫維中",MAG_id:"2652632492" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weichung wen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2689555854")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weichung wen",MAG_id:"2689555854" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蕭旭峰" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2719556949")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蕭旭峰",MAG_id:"2719556949" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsufeng hsiao" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2635396387")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsufeng hsiao",MAG_id:"2635396387" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="816542629" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"816542629", title:"h 264 avc svc分層視訊串流動態提取技術", language:"zh_cht", year:"2006", date:"2006-09-25", citation_cnt:"0", fields:[{name:"video tracking", mag_id:"202474056"}, {name:"video processing", mag_id:"65483669"}, {name:"video post processing", mag_id:"117090137"}, {name:"video compression picture types", mag_id:"106030495"}, {name:"transcoding", mag_id:"134535813"}, {name:"standardization", mag_id:"188087704"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"real time computing", mag_id:"79403827"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"楊植竣", mag_id:"2339952316"}, {name:"溫維中", mag_id:"899901531"}, {name:"蕭旭峰", mag_id:"747486736"}, {name:"游人諭", mag_id:"2341000336"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="楊植竣" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2339952316")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"楊植竣",MAG_id:"2339952316" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="溫維中" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("899901531")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"溫維中",MAG_id:"899901531" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蕭旭峰" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("747486736")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蕭旭峰",MAG_id:"747486736" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="游人諭" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2341000336")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"游人諭",MAG_id:"2341000336" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 蘇柏齊 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2801825615" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2801825615", title:"基於深度學習之手勢人機介面與定位加值服務 i a deep learning based gesture interface for value added location services i", language:"zh_cht", year:"2018", date:"2018-01-01", citation_cnt:"0", fields:[{name:"social network", mag_id:"86256295"}, {name:"location based service", mag_id:"155292070"}, {name:"human computer interaction", mag_id:"107457646"}, {name:"gesture recognition", mag_id:"159437735"}, {name:"gesture", mag_id:"207347870"}, {name:"deep learning", mag_id:"108583219"}, {name:"computer science", mag_id:"41008148"}, {name:"building automation", mag_id:"83931994"}, {name:"artificial neural network", mag_id:"50644808"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"范國清", mag_id:"2799381238"}, {name:"鄭旭詠", mag_id:"2802383643"}, {name:"蘇柏齊", mag_id:"2801522461"}, {name:"施國琛", mag_id:"2801049241"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="范國清" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2799381238")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"范國清",MAG_id:"2799381238" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2802383643")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2802383643" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蘇柏齊" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801522461")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蘇柏齊",MAG_id:"2801522461" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="施國琛" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801049241")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"施國琛",MAG_id:"2801049241" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2545486091" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2545486091", title:"h 264 avc視訊之鑑識與反鑑識技術 the techniques of forensics and anti forensics for h 264 avc", language:"zh_cht", year:"2016", date:"2016-03-29", citation_cnt:"0", fields:[{name:"computer security", mag_id:"38652104"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"蘇柏齊", mag_id:"2705312663"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蘇柏齊" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2705312663")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蘇柏齊",MAG_id:"2705312663" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 郭寶錚 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2749743770" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2749743770", title:"種苗研究團隊 基因改造玉米共存模式之研究 ii", language:"zh_cht", year:"2011", date:"2011-01-01", citation_cnt:"0", fields:[{name:"zoology", mag_id:"90856448"}, {name:"genetically modified organism", mag_id:"51456166"}, {name:"gene flow", mag_id:"107023163"}, {name:"botany", mag_id:"59822182"}, {name:"biology", mag_id:"86803240"}, ],authors:[{name:"郭寶錚", mag_id:"2748067205"}, {name:"謝光照", mag_id:"2749061170"}, {name:"沈翰祖", mag_id:"2750442398"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭寶錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2748067205")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭寶錚",MAG_id:"2748067205" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="謝光照" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2749061170")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"謝光照",MAG_id:"2749061170" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="沈翰祖" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2750442398")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"沈翰祖",MAG_id:"2750442398" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2608538374" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2608538374", title:"classifying cultivars of rice oryza sativa l based on canopy reflectance spectra data corrected using orthogonal projections to latent structures o pls method", language:"zh_cht", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[{name:"reflectivity", mag_id:"108597893"}, {name:"oryza sativa", mag_id:"2778543611"}, {name:"geography", mag_id:"205649164"}, {name:"cultivar", mag_id:"197321923"}, {name:"canopy", mag_id:"101000010"}, {name:"botany", mag_id:"59822182"}, ],authors:[{name:"林汶鑫", mag_id:"2608606441"}, {name:"楊純明", mag_id:"2609722820"}, {name:"郭寶錚", mag_id:"2609477473"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林汶鑫" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2608606441")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林汶鑫",MAG_id:"2608606441" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="楊純明" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2609722820")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"楊純明",MAG_id:"2609722820" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭寶錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2609477473")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭寶錚",MAG_id:"2609477473" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2604042126" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2604042126", title:"research on selection breeding and gap for medical herbs ii", language:"zh_cht", year:"2006", date:"2006-01-01", citation_cnt:"0", fields:[{name:"traditional medicine", mag_id:"556039675"}, {name:"strobilanthes cusia", mag_id:"2910645520"}, {name:"isatis tinctoria", mag_id:"2781467878"}, {name:"engineering", mag_id:"127413603"}, ],authors:[{name:"陳世雄", mag_id:"2717703540"}, {name:"郭寶錚", mag_id:"2676891617"}, {name:"莊周瑞", mag_id:"2597692656"}, {name:"鍾婷婷", mag_id:"2603506760"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳世雄" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2717703540")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳世雄",MAG_id:"2717703540" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭寶錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2676891617")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭寶錚",MAG_id:"2676891617" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="莊周瑞" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2597692656")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"莊周瑞",MAG_id:"2597692656" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鍾婷婷" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2603506760")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鍾婷婷",MAG_id:"2603506760" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2268999254" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2268999254", title:"玉屏風散對抗過敏及調節免疫因子組織胺 間白素 4之研究", language:"zh_cht", year:"1998", date:"1998-10-01", citation_cnt:"0", fields:[{name:"yu ping feng san", mag_id:"2910565693"}, {name:"traditional medicine", mag_id:"556039675"}, {name:"traditional chinese medicine", mag_id:"188947578"}, {name:"medicine", mag_id:"71924100"}, {name:"ingredient", mag_id:"2780589914"}, {name:"histamine", mag_id:"1122143"}, {name:"cytokine network", mag_id:"2909531131"}, {name:"active ingredient", mag_id:"45904493"}, ],authors:[{name:"鄭國揚", mag_id:"2261633086"}, {name:"蔡銘修", mag_id:"2721032065"}, {name:"林昭庚", mag_id:"2645526403"}, {name:"周昌德", mag_id:"869363446"}, {name:"郭寶錚", mag_id:"2256842534"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭國揚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2261633086")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭國揚",MAG_id:"2261633086" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡銘修" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2721032065")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡銘修",MAG_id:"2721032065" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林昭庚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2645526403")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林昭庚",MAG_id:"2645526403" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="周昌德" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("869363446")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"周昌德",MAG_id:"869363446" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭寶錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2256842534")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭寶錚",MAG_id:"2256842534" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2487899287" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2487899287", title:"大豆株型 生長季節 栽培密度 對農藝性狀之影響及產量構成因素之探討", language:"zh_cht", year:"1983", date:"1983-01-01", citation_cnt:"0", fields:[{name:"environmental science", mag_id:"39432304"}, {name:"crop", mag_id:"137580998"}, {name:"agronomy", mag_id:"6557445"}, {name:"agriculture", mag_id:"118518473"}, {name:"agricultural science", mag_id:"37621935"}, ],authors:[{name:"郭寶錚", mag_id:"2481642690"}, {name:"baozheng guo", mag_id:"2562055099"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="郭寶錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2481642690")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"郭寶錚",MAG_id:"2481642690" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="baozheng guo" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2562055099")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"baozheng guo",MAG_id:"2562055099" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 曹昱 -----

//----- 鄭旭詠 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2801825615" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2801825615", title:"基於深度學習之手勢人機介面與定位加值服務 i a deep learning based gesture interface for value added location services i", language:"zh_cht", year:"2018", date:"2018-01-01", citation_cnt:"0", fields:[{name:"social network", mag_id:"86256295"}, {name:"location based service", mag_id:"155292070"}, {name:"human computer interaction", mag_id:"107457646"}, {name:"gesture recognition", mag_id:"159437735"}, {name:"gesture", mag_id:"207347870"}, {name:"deep learning", mag_id:"108583219"}, {name:"computer science", mag_id:"41008148"}, {name:"building automation", mag_id:"83931994"}, {name:"artificial neural network", mag_id:"50644808"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"范國清", mag_id:"2799381238"}, {name:"鄭旭詠", mag_id:"2802383643"}, {name:"蘇柏齊", mag_id:"2801522461"}, {name:"施國琛", mag_id:"2801049241"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="范國清" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2799381238")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"范國清",MAG_id:"2799381238" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2802383643")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2802383643" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蘇柏齊" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801522461")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蘇柏齊",MAG_id:"2801522461" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="施國琛" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801049241")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"施國琛",MAG_id:"2801049241" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2905637880" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2905637880", title:"總計畫暨子計畫一 軟體定義車載網路下的路由協定與資源管理 the key technologies for the new generation vehicular networks towards 2020 grand project and sub project 6 the routing protocol design and resource management for sdn based vehicular networks", language:"zh_cht", year:"2018", date:"2018-12-19", citation_cnt:"0", fields:[{name:"vehicular ad hoc network", mag_id:"192448918"}, {name:"routing protocol", mag_id:"104954878"}, {name:"resource management", mag_id:"9765861"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, ],authors:[{name:"吳曉光", mag_id:"2905606304"}, {name:"劉建興", mag_id:"2906152521"}, {name:"林俊宏", mag_id:"2906393452"}, {name:"鄭旭詠", mag_id:"2905880855"}, {name:"孫敏德", mag_id:"2906373215"}, {name:"陳璽煌", mag_id:"2906384671"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="吳曉光" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2905606304")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"吳曉光",MAG_id:"2905606304" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="劉建興" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906152521")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"劉建興",MAG_id:"2906152521" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林俊宏" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906393452")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林俊宏",MAG_id:"2906393452" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2905880855")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2905880855" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="孫敏德" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906373215")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"孫敏德",MAG_id:"2906373215" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳璽煌" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2906384671")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳璽煌",MAG_id:"2906384671" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2594061549" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2594061549", title:"從智能導航走向自我駕駛的新車輛網路 總計畫與子計畫六 前瞻車載網路之網路自適應智能管理 wisdom guiding and self driving new revolution networks smart adaptive vehicular network management for future vehicular of internet", language:"zh_cht", year:"2016", date:"2016-03-29", citation_cnt:"0", fields:[{name:"vehicular communication systems", mag_id:"30095986"}, {name:"the internet", mag_id:"110875604"}, {name:"network management", mag_id:"129763632"}, {name:"computer security", mag_id:"38652104"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, ],authors:[{name:"吳曉光", mag_id:"2722295805"}, {name:"林俊宏", mag_id:"2642269418"}, {name:"孫敏德", mag_id:"2643947598"}, {name:"鄭旭詠", mag_id:"2666258888"}, {name:"陳璽煌", mag_id:"2694228624"}, {name:"劉建興", mag_id:"2634465828"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="吳曉光" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2722295805")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"吳曉光",MAG_id:"2722295805" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林俊宏" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2642269418")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林俊宏",MAG_id:"2642269418" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="孫敏德" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2643947598")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"孫敏德",MAG_id:"2643947598" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2666258888")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2666258888" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳璽煌" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2694228624")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳璽煌",MAG_id:"2694228624" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="劉建興" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2634465828")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"劉建興",MAG_id:"2634465828" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2755519579" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2755519579", title:"簽名認證與握筆姿勢之動態資訊擷取與分析 signature verification and dynamic writing posture analysis", language:"zh_cht", year:"2013", date:"2013-12-01", citation_cnt:"0", fields:[{name:"speech recognition", mag_id:"28490314"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"鄭旭詠", mag_id:"2756475604"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2756475604")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2756475604" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2611530948" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2611530948", title:"新世代可自我檢測的綠色節能車載運輸系統 總計畫暨子計畫一 支援車輛網路的情境感知智慧型無線連結管理與傳輸協定設計 next generation self diagnostic and green energy vehicular transportation system", language:"zh_cht", year:"2012", date:"2012-12-01", citation_cnt:"0", fields:[{name:"renewable energy", mag_id:"188573790"}, {name:"engineering", mag_id:"127413603"}, {name:"automotive engineering", mag_id:"171146098"}, ],authors:[{name:"吳曉光", mag_id:"2697101463"}, {name:"劉建興", mag_id:"2594612639"}, {name:"陳璽煌", mag_id:"2591860770"}, {name:"鄭旭詠", mag_id:"2594424514"}, {name:"孫敏德", mag_id:"2593464884"}, {name:"林俊宏", mag_id:"2691872396"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="吳曉光" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2697101463")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"吳曉光",MAG_id:"2697101463" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="劉建興" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2594612639")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"劉建興",MAG_id:"2594612639" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳璽煌" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2591860770")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳璽煌",MAG_id:"2591860770" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2594424514")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2594424514" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="孫敏德" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2593464884")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"孫敏德",MAG_id:"2593464884" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林俊宏" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2691872396")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林俊宏",MAG_id:"2691872396" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2800302973" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2800302973", title:"視訊分析應用於智慧型運輸系統中之先進車輛控制與安全服務 video analysis for advanced vehicle control and safety services in intelligent transportation systems", language:"zh_cht", year:"2006", date:"2006-11-27", citation_cnt:"0", fields:[{name:"intelligent transportation system", mag_id:"47796450"}, {name:"engineering", mag_id:"127413603"}, {name:"automotive engineering", mag_id:"171146098"}, ],authors:[{name:"鄭旭詠", mag_id:"2802468744"}, {name:"hsuyung cheng", mag_id:"2800817908"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭旭詠" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2802468744")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭旭詠",MAG_id:"2802468744" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsuyung cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2800817908")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsuyung cheng",MAG_id:"2800817908" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 李宏毅 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2563259945" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2563259945", title:"語音數位內容檢索 相關回饋 圖論及語意", language:"zh_cht", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[{name:"relevance feedback", mag_id:"2779532271"}, {name:"random walk", mag_id:"121194460"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"李宏毅", mag_id:"2668387260"}, {name:"hungyi lee", mag_id:"2744824588"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2668387260")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2668387260" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungyi lee" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2744824588")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungyi lee",MAG_id:"2744824588" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2499405331" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2499405331", title:"海明威小说 硬汉 语风研究", language:"zh_chs", year:"2015", date:"2015-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"2499448821"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2499448821")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2499448821" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2562716907" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2562716907", title:"scenario forecast model of long term trends in rural labor transfer based on evolutionary games", language:"zh_chs", year:"2015", date:"2015-01-01", citation_cnt:"0", fields:[{name:"microeconomics", mag_id:"175444787"}, {name:"economics", mag_id:"162324750"}, {name:"economic growth", mag_id:"50522688"}, ],authors:[{name:"李宏毅", mag_id:"2563720013"}, {name:"周闯", mag_id:"2566750646"}, {name:"刘德海", mag_id:"2561930608"}, {name:"王维国", mag_id:"2567646195"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2563720013")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2563720013" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="周闯" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2566750646")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"周闯",MAG_id:"2566750646" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="刘德海" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2561930608")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"刘德海",MAG_id:"2561930608" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="王维国" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2567646195")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"王维国",MAG_id:"2567646195" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="863815993" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"863815993", title:"反思生命的异同 评电影 返老还童", language:"zh_chs", year:"2013", date:"2013-01-01", citation_cnt:"0", fields:[],authors:[{name:"闵洁", mag_id:"2651515756"}, {name:"李宏毅", mag_id:"2692224514"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="闵洁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2651515756")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"闵洁",MAG_id:"2651515756" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2692224514")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2692224514" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="889113527" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"889113527", title:"与平凡并肩战斗的王者 评电影 国王的演讲 的特别之处", language:"zh_chs", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"2646800727"}, {name:"闵洁", mag_id:"2647609809"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2646800727")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2646800727" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="闵洁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2647609809")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"闵洁",MAG_id:"2647609809" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2267717749" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2267717749", title:"肖申克高墙内的自由与希望 解读 肖申克的救赎 不一般的人生意境", language:"zh_chs", year:"2012", date:"2012-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"2710702530"}, {name:"闵洁", mag_id:"2716701037"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2710702530")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2710702530" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="闵洁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2716701037")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"闵洁",MAG_id:"2716701037" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2806384292" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2806384292", title:"mechanical behavior of metallic nanowires containing vacancy cluster defects", language:"zh_cht", year:"2011", date:"2011-01-01", citation_cnt:"0", fields:[{name:"vacancy defect", mag_id:"114221277"}, {name:"nanowire", mag_id:"74214498"}, {name:"metal", mag_id:"544153396"}, {name:"materials science", mag_id:"192562407"}, {name:"atomic physics", mag_id:"184779094"}, ],authors:[{name:"黃培興", mag_id:"2807246585"}, {name:"張莉毓", mag_id:"2805159460"}, {name:"吳育仁", mag_id:"2807499585"}, {name:"黃明月", mag_id:"2805975273"}, {name:"李宏毅", mag_id:"2807446516"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="黃培興" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2807246585")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"黃培興",MAG_id:"2807246585" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="張莉毓" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2805159460")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"張莉毓",MAG_id:"2805159460" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="吳育仁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2807499585")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"吳育仁",MAG_id:"2807499585" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="黃明月" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2805975273")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"黃明月",MAG_id:"2805975273" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2807446516")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2807446516" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1013379891" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1013379891", title:"pb 7200呼吸机和s 5 aespire麻醉机故障检修2例", language:"zh_chs", year:"2010", date:"2010-01-01", citation_cnt:"0", fields:[],authors:[{name:"刘宇静", mag_id:"2714131953"}, {name:"李宏毅", mag_id:"2579177222"}, {name:"王丹", mag_id:"2668309283"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="刘宇静" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2714131953")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"刘宇静",MAG_id:"2714131953" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2579177222")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2579177222" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="王丹" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2668309283")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"王丹",MAG_id:"2668309283" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="324748717" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"324748717", title:"评析电影 辛巴达七海传奇 的人生信条", language:"zh_chs", year:"2009", date:"2009-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"285447494"}, {name:"闵洁", mag_id:"1031496186"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("285447494")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"285447494" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="闵洁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1031496186")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"闵洁",MAG_id:"1031496186" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1589634942" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1589634942", title:"硬汉性格的文化解读 老人与海 所体现的价值取向", language:"zh_chs", year:"2009", date:"2009-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"216452861"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("216452861")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"216452861" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1044003008" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1044003008", title:"无色人生和有色的永恒 品析电影 僵尸新娘", language:"zh_chs", year:"2009", date:"2009-01-01", citation_cnt:"0", fields:[],authors:[{name:"李宏毅", mag_id:"2656808400"}, {name:"闵洁", mag_id:"2653909428"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2656808400")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2656808400" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="闵洁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2653909428")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"闵洁",MAG_id:"2653909428" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1135233946" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1135233946", title:"健康人力资本 健康投资和经济增长 以中国跨省数据为例", language:"zh_chs", year:"2008", date:"2008-01-01", citation_cnt:"0", fields:[],authors:[{name:"王弟海", mag_id:"2401307842"}, {name:"龚六堂", mag_id:"2397860022"}, {name:"李宏毅", mag_id:"2396810279"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="王弟海" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2401307842")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"王弟海",MAG_id:"2401307842" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="龚六堂" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2397860022")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"龚六堂",MAG_id:"2397860022" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="李宏毅" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2396810279")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"李宏毅",MAG_id:"2396810279" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 杭學鳴 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2105833738" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2105833738", title:"a feature based robust digital image watermarking scheme", language:"en@@@zh_cht", year:"2003", date:"2003-04-01", citation_cnt:"295", fields:[{name:"pattern recognition", mag_id:"178980831"}, {name:"normalization", mag_id:"195653225"}, {name:"mathematics", mag_id:"33923547"}, {name:"image texture", mag_id:"63099799"}, {name:"image restoration", mag_id:"106430172"}, {name:"image processing", mag_id:"9417928"}, {name:"feature extraction", mag_id:"52622490"}, {name:"feature detection", mag_id:"126422989"}, {name:"feature", mag_id:"7374053"}, {name:"computer vision", mag_id:"31972630"}, {name:"binary image", mag_id:"193828747"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chihwei tang", mag_id:"2124607893"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihwei tang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2124607893")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihwei tang",MAG_id:"2124607893" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2122398530" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2122398530", title:"source model for transform video coder and its application i fundamental theory", language:"en@@@zh_cht", year:"1997", date:"1997-04-01", citation_cnt:"253", fields:[{name:"transform coding", mag_id:"169805256"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"signal processing", mag_id:"104267543"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"quantization", mag_id:"28855332"}, {name:"mathematics", mag_id:"33923547"}, {name:"image quality", mag_id:"55020928"}, {name:"expression", mag_id:"76482347"}, {name:"distortion", mag_id:"115225779"}, {name:"data compression", mag_id:"78548338"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"jiannjone chen", mag_id:"2632654580"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jiannjone chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2632654580")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jiannjone chen",MAG_id:"2632654580" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2265530537" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2265530537", title:"h 264 avc motion estimation implementation on compute unified device architecture cuda", language:"en", year:"2010", date:"2010-01-01", citation_cnt:"83", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"motion estimation", mag_id:"10161872"}, {name:"image processing", mag_id:"9417928"}, {name:"computer science", mag_id:"41008148"}, {name:"cuda", mag_id:"2778119891"}, {name:"architecture", mag_id:"123657996"}, ],authors:[{name:"weinien chen", mag_id:"2671795720"}, {name:"hsuehming hang", mag_id:"2892581518"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weinien chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2671795720")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weinien chen",MAG_id:"2671795720" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892581518")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2112028719" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2112028719", title:"advances in the scalable amendment of h 264 avc", language:"en@@@pl@@@zh_cht", year:"2007", date:"2007-01-01", citation_cnt:"63", fields:[{name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"real time computing", mag_id:"79403827"}, {name:"on the fly", mag_id:"2781020372"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, {name:"bitstream", mag_id:"136695289"}, {name:"amendment", mag_id:"2779184190"}, {name:"algorithmic efficiency", mag_id:"116709606"}, ],authors:[{name:"hsiangchun huang", mag_id:"2666193165"}, {name:"wenhsiao peng", mag_id:"2143202554"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangchun huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2666193165")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangchun huang",MAG_id:"2666193165" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1965242876" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1965242876", title:"fast mode decision algorithm for residual quadtree coding in hevc", language:"en", year:"2011", date:"2011-11-01", citation_cnt:"48", fields:[{name:"transform coding", mag_id:"169805256"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"residual", mag_id:"155512373"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"quantization", mag_id:"28855332"}, {name:"quadtree", mag_id:"151416825"}, {name:"context adaptive variable length coding", mag_id:"135534801"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"suwei teng", mag_id:"2229224701"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"yifu chen", mag_id:"2295635997"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="suwei teng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2229224701")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"suwei teng",MAG_id:"2229224701" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yifu chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2295635997")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yifu chen",MAG_id:"2295635997" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2124993854" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2124993854", title:"h 264 avc motion estimation implmentation on compute unified device architecture cuda", language:"en", year:"2008", date:"2008-06-01", citation_cnt:"46", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"parallel computing", mag_id:"173608175"}, {name:"parallel algorithm", mag_id:"120373497"}, {name:"motion estimation", mag_id:"10161872"}, {name:"graphics processing unit", mag_id:"2779851693"}, {name:"general purpose computing on graphics processing units", mag_id:"50630238"}, {name:"coprocessor", mag_id:"86111242"}, {name:"computer science", mag_id:"41008148"}, {name:"central processing unit", mag_id:"49154492"}, {name:"cuda", mag_id:"2778119891"}, {name:"architecture", mag_id:"123657996"}, ],authors:[{name:"weinien chen", mag_id:"2118099358"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weinien chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2118099358")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weinien chen",MAG_id:"2118099358" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2131272059" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2131272059", title:"adaptive buffer quantizer control for transform video coders", language:"en@@@ja", year:"1990", date:"1990-09-27", citation_cnt:"165", fields:[{name:"residual frame", mag_id:"204641915"}, {name:"quantization", mag_id:"28855332"}, {name:"mathematics", mag_id:"33923547"}, {name:"controller", mag_id:"79699506"}, {name:"control theory", mag_id:"65244806"}, {name:"computer vision", mag_id:"31972630"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1490410396" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1490410396", title:"an efficient block matching algorithm for motion compensated coding", language:"en", year:"1987", date:"1987-01-01", citation_cnt:"178", fields:[{name:"pattern recognition", mag_id:"178980831"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion detection", mag_id:"2780624872"}, {name:"motion compensation", mag_id:"128840427"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"computation", mag_id:"45374587"}, {name:"coding", mag_id:"179518139"}, {name:"block matching algorithm", mag_id:"167510206"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"atul puri", mag_id:"2778379561"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"d schilling", mag_id:"2431554892"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="atul puri" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2778379561")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"atul puri",MAG_id:"2778379561" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="d schilling" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2431554892")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"d schilling",MAG_id:"2431554892" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2155647724" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2155647724", title:"source model for transform video coder and its application ii variable frame rate coding", language:"en@@@ja@@@zh_cht", year:"1997", date:"1997-04-01", citation_cnt:"64", fields:[{name:"variable frame rate", mag_id:"2778640323"}, {name:"transform coding", mag_id:"169805256"}, {name:"residual frame", mag_id:"204641915"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"quantization", mag_id:"28855332"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"image quality", mag_id:"55020928"}, {name:"frame rate", mag_id:"3261483"}, {name:"frame", mag_id:"126042441"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jiannjone chen", mag_id:"2632654580"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jiannjone chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2632654580")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jiannjone chen",MAG_id:"2632654580" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1504985176" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1504985176", title:"architecture and method for fine granularity scalable video coding", language:"en@@@zh_cht", year:"2002", date:"2002-08-27", citation_cnt:"113", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"motion compensation", mag_id:"128840427"}, {name:"granularity", mag_id:"177774035"}, {name:"encoder", mag_id:"118505674"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"architecture", mag_id:"123657996"}, ],authors:[{name:"hsiangchun huang", mag_id:"2666193165"}, {name:"chungneng wang", mag_id:"2110649880"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangchun huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2666193165")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangchun huang",MAG_id:"2666193165" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chungneng wang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2110649880")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chungneng wang",MAG_id:"2110649880" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1512597116" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1512597116", title:"method and apparatus for dynamic channel bandwidth allocation among multiple parallel video coders", language:"en@@@ja", year:"1990", date:"1990-09-10", citation_cnt:"225", fields:[{name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"dictionary coder", mag_id:"55652533"}, {name:"computer science", mag_id:"41008148"}, {name:"channel", mag_id:"156996364"}, {name:"channel capacity", mag_id:"97744766"}, {name:"channel allocation schemes", mag_id:"114237682"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1589650231" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1589650231", title:"layered access control schemes on watermarked scalable media", language:"en@@@zh_cht", year:"2005", date:"2005-01-01", citation_cnt:"59", fields:[{name:"watermarking attack", mag_id:"122760801"}, {name:"watermark", mag_id:"164112704"}, {name:"on the fly encryption", mag_id:"147977885"}, {name:"encryption", mag_id:"148730421"}, {name:"digital watermarking", mag_id:"150817343"}, {name:"digital multimedia broadcasting", mag_id:"2780079832"}, {name:"cryptography", mag_id:"178489894"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, {name:"access control", mag_id:"527821871"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2166975427" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2166975427", title:"image and video coding standards", language:"en@@@ja", year:"1993", date:"1993-01-01", citation_cnt:"152", fields:[{name:"simulation", mag_id:"44154836"}, {name:"real time computing", mag_id:"79403827"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"coding", mag_id:"179518139"}, {name:"bandwidth", mag_id:"74211669"}, ],authors:[{name:"rangarajan aravind", mag_id:"2303676077"}, {name:"glenn l cash", mag_id:"1967085491"}, {name:"donald l duttweiler", mag_id:"2549837868"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"barry g haskell", mag_id:"2214176929"}, {name:"atul puri", mag_id:"2778379561"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="rangarajan aravind" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2303676077")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"rangarajan aravind",MAG_id:"2303676077" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="glenn l cash" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1967085491")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"glenn l cash",MAG_id:"1967085491" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="donald l duttweiler" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2549837868")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"donald l duttweiler",MAG_id:"2549837868" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barry g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2214176929")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barry g haskell",MAG_id:"2214176929" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="atul puri" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2778379561")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"atul puri",MAG_id:"2778379561" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2004973896" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2004973896", title:"layer adaptive mode decision and motion search for scalable video coding with combined coarse granular scalability cgs and temporal scalability", language:"en@@@zh_cht", year:"2007", date:"2007-09-01", citation_cnt:"34", fields:[{name:"speedup", mag_id:"68339613"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"reference frame", mag_id:"172849965"}, {name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"motion vector", mag_id:"2779020251"}, {name:"encoder", mag_id:"118505674"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithmic efficiency", mag_id:"116709606"}, ],authors:[{name:"hungchih lin", mag_id:"2235570058"}, {name:"wenhsiao peng", mag_id:"2143202554"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"wenjen ho", mag_id:"2707121290"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2235570058")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2235570058" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenjen ho" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2707121290")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenjen ho",MAG_id:"2707121290" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2097383824" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2097383824", title:"vector quantization based on genetic simulated annealing", language:"en@@@zh_cht", year:"2001", date:"2001-07-01", citation_cnt:"59", fields:[{name:"vector quantization", mag_id:"199833920"}, {name:"simulated annealing", mag_id:"126980161"}, {name:"mathematics", mag_id:"33923547"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"linde buzo gray algorithm", mag_id:"93372532"}, {name:"genetic algorithm", mag_id:"8880873"}, {name:"data compression", mag_id:"78548338"}, {name:"crossover", mag_id:"122507166"}, {name:"codebook", mag_id:"127759330"}, {name:"cpu time", mag_id:"131584098"}, ],authors:[{name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"jengshyang pan", mag_id:"2126295343"}, {name:"zheming lu", mag_id:"2102537041"}, {name:"shenghe sun", mag_id:"2148508452"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jengshyang pan" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2126295343")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jengshyang pan",MAG_id:"2126295343" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="zheming lu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2102537041")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"zheming lu",MAG_id:"2102537041" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="shenghe sun" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2148508452")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"shenghe sun",MAG_id:"2148508452" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2089440321" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2089440321", title:"fast coding unit decision algorithm for hevc", language:"en@@@zh_cht", year:"2013", date:"2013-10-01", citation_cnt:"17", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"quadtree", mag_id:"151416825"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer science", mag_id:"41008148"}, {name:"computational complexity theory", mag_id:"179799912"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"coding", mag_id:"179518139"}, {name:"algorithmic efficiency", mag_id:"116709606"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"weijhe hsu", mag_id:"2141140493"}, {name:"hsuehming hang", mag_id:"2892913700"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weijhe hsu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2141140493")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weijhe hsu",MAG_id:"2141140493" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892913700")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2102718208" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2102718208", title:"a comparison of block matching algorithms mapped to systolic array implementation", language:"en@@@zh_cht", year:"1997", date:"1997-10-01", citation_cnt:"67", fields:[{name:"very large scale integration", mag_id:"14580979"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"systolic array", mag_id:"150741067"}, {name:"systems design", mag_id:"31352089"}, {name:"real time computing", mag_id:"79403827"}, {name:"motion estimation", mag_id:"10161872"}, {name:"input output", mag_id:"196697905"}, {name:"image quality", mag_id:"55020928"}, {name:"computer science", mag_id:"41008148"}, {name:"block matching algorithm", mag_id:"167510206"}, {name:"architecture", mag_id:"123657996"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"sheuchih cheng", mag_id:"2150294388"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sheuchih cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2150294388")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sheuchih cheng",MAG_id:"2150294388" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1840770463" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1840770463", title:"video signal quantization for an mpeg like coding environment", language:"de@@@en", year:"1991", date:"1991-11-08", citation_cnt:"104", fields:[{name:"quantization", mag_id:"28855332"}, {name:"perception", mag_id:"26760741"}, {name:"noise sensitivity", mag_id:"2908950400"}, {name:"geography", mag_id:"205649164"}, {name:"encoding", mag_id:"125411270"}, {name:"encode", mag_id:"66746571"}, {name:"computer vision", mag_id:"31972630"}, {name:"coding", mag_id:"179518139"}, {name:"categorization", mag_id:"94124525"}, {name:"brightness", mag_id:"125245961"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"rangarajan aravind", mag_id:"2303676077"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"barin g haskell", mag_id:"2917464579"}, {name:"atul puri", mag_id:"2778379561"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="rangarajan aravind" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2303676077")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"rangarajan aravind",MAG_id:"2303676077" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barin g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2917464579")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barin g haskell",MAG_id:"2917464579" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="atul puri" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2778379561")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"atul puri",MAG_id:"2778379561" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2100861839" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2100861839", title:"modeling of pattern based block motion estimation and its application", language:"en@@@zh_cht", year:"2009", date:"2009-01-01", citation_cnt:"21", fields:[{name:"weight function", mag_id:"134466208"}, {name:"statistical model", mag_id:"114289077"}, {name:"search algorithm", mag_id:"125583679"}, {name:"pattern search", mag_id:"82691427"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"motion vector", mag_id:"2779020251"}, {name:"motion estimation", mag_id:"10161872"}, {name:"mathematics", mag_id:"33923547"}, {name:"genetic algorithm", mag_id:"8880873"}, {name:"experimental data", mag_id:"55037315"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jangjer tsai", mag_id:"2813352915"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangjer tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2813352915")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangjer tsai",MAG_id:"2813352915" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1645535300" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1645535300", title:"motion estimation for video coding standards", language:"en", year:"1997", date:"1997-11-01", citation_cnt:"38", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"motion vector", mag_id:"2779020251"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion compensation", mag_id:"128840427"}, {name:"inter frame", mag_id:"39394851"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"coding", mag_id:"179518139"}, {name:"block matching algorithm", mag_id:"167510206"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"yungming chou", mag_id:"2471392096"}, {name:"sheuchih cheng", mag_id:"2150294388"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yungming chou" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2471392096")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yungming chou",MAG_id:"2471392096" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sheuchih cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2150294388")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sheuchih cheng",MAG_id:"2150294388" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2103598640" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2103598640", title:"consistent picture quality control strategy for dependent video coding", language:"en@@@zh_cht", year:"2009", date:"2009-05-01", citation_cnt:"18", fields:[{name:"video quality", mag_id:"103910844"}, {name:"subjective video quality", mag_id:"114227958"}, {name:"simulation", mag_id:"44154836"}, {name:"signal compression", mag_id:"2778192920"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"lagrange multiplier", mag_id:"73684929"}, {name:"inter frame", mag_id:"39394851"}, {name:"image quality", mag_id:"55020928"}, {name:"distortion", mag_id:"115225779"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"kaolung huang", mag_id:"2228962781"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="kaolung huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2228962781")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"kaolung huang",MAG_id:"2228962781" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2099037094" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2099037094", title:"interpolative vector quantization of color images", language:"en@@@fr", year:"1988", date:"1988-04-01", citation_cnt:"66", fields:[{name:"vector quantization", mag_id:"199833920"}, {name:"quantization", mag_id:"28855332"}, {name:"mathematics", mag_id:"33923547"}, {name:"linde buzo gray algorithm", mag_id:"93372532"}, {name:"interpolation", mag_id:"17378031"}, {name:"image processing", mag_id:"9417928"}, {name:"computer vision", mag_id:"31972630"}, {name:"color quantization", mag_id:"173752661"}, {name:"color image", mag_id:"142616399"}, {name:"codebook", mag_id:"127759330"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"barry g haskell", mag_id:"2214176929"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barry g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2214176929")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barry g haskell",MAG_id:"2214176929" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1984352770" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1984352770", title:"fast context adaptive mode decision algorithm for scalable video coding with combined coarse grain quality scalability cgs and temporal scalability", language:"en@@@zh_cht", year:"2010", date:"2010-05-01", citation_cnt:"18", fields:[{name:"video compression picture types", mag_id:"106030495"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"reference frame", mag_id:"172849965"}, {name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"motion vector", mag_id:"2779020251"}, {name:"motion estimation", mag_id:"10161872"}, {name:"macroblock", mag_id:"124828224"}, {name:"computer science", mag_id:"41008148"}, {name:"algorithm", mag_id:"11413529"}, {name:"adaptive algorithm", mag_id:"2776003309"}, ],authors:[{name:"hungchih lin", mag_id:"2235570058"}, {name:"wenhsiao peng", mag_id:"2143202554"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2235570058")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2235570058" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1546226961" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1546226961", title:"advances of mpeg scalable video coding standard", language:"en@@@zh_cht", year:"2005", date:"2005-09-14", citation_cnt:"8", fields:[{name:"wavelet", mag_id:"47432892"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"motion vector", mag_id:"2779020251"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"wenhsiao peng", mag_id:"2143202554"}, {name:"chiayang tsai", mag_id:"2629393198"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2629393198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2629393198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="218202219" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"218202219", title:"method for performing context adaptive binary arithmetic coding with stochastic bit reshuffling for fine granularity scalability", language:"en@@@zh_cht", year:"2005", date:"2005-06-21", citation_cnt:"18", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"scalability", mag_id:"48044578"}, {name:"parallel computing", mag_id:"173608175"}, {name:"harmonic vector excitation coding", mag_id:"80167644"}, {name:"granularity", mag_id:"177774035"}, {name:"discrete cosine transform", mag_id:"2221639"}, {name:"context adaptive variable length coding", mag_id:"135534801"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer science", mag_id:"41008148"}, {name:"bit field", mag_id:"183383400"}, {name:"binary number", mag_id:"48372109"}, ],authors:[{name:"wenhsiao peng", mag_id:"2143202554"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2091048677" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2091048677", title:"an adaptive inverse halftoning algorithm", language:"en@@@zh_cht", year:"1997", date:"1997-08-01", citation_cnt:"23", fields:[{name:"mathematics", mag_id:"33923547"}, {name:"linear filter", mag_id:"139722471"}, {name:"kernel adaptive filter", mag_id:"13107197"}, {name:"iterative reconstruction", mag_id:"141379421"}, {name:"inverse problem", mag_id:"135252773"}, {name:"image processing", mag_id:"9417928"}, {name:"grayscale", mag_id:"78201319"}, {name:"computer vision", mag_id:"31972630"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm", mag_id:"11413529"}, {name:"adaptive filter", mag_id:"102248274"}, {name:"adaptive algorithm", mag_id:"2776003309"}, ],authors:[{name:"liming chen", mag_id:"2256288294"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="liming chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2256288294")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"liming chen",MAG_id:"2256288294" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2106103597" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2106103597", title:"digital hdtv compression using parallel motion compensated transform coders", language:"en@@@fr", year:"1991", date:"1991-06-01", citation_cnt:"18", fields:[{name:"videotelephony", mag_id:"540522513"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"telephony", mag_id:"195358072"}, {name:"quantization", mag_id:"28855332"}, {name:"parallel motion", mag_id:"186708470"}, {name:"image quality", mag_id:"55020928"}, {name:"high definition television", mag_id:"2778129506"}, {name:"encoding", mag_id:"125411270"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, {name:"bandwidth compression", mag_id:"2781324177"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"riccardo leonardi", mag_id:"2010459491"}, {name:"barry g haskell", mag_id:"2214176929"}, {name:"robert l schmidt", mag_id:"2292813735"}, {name:"hemant bheda", mag_id:"2693551929"}, {name:"joseph h othmer", mag_id:"2303138805"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="riccardo leonardi" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2010459491")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"riccardo leonardi",MAG_id:"2010459491" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barry g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2214176929")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barry g haskell",MAG_id:"2214176929" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="robert l schmidt" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2292813735")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"robert l schmidt",MAG_id:"2292813735" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hemant bheda" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2693551929")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hemant bheda",MAG_id:"2693551929" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="joseph h othmer" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2303138805")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"joseph h othmer",MAG_id:"2303138805" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1563261155" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1563261155", title:"improved video signal quantization for an mpeg like coding environment", language:"en@@@it", year:"1992", date:"1992-10-30", citation_cnt:"36", fields:[{name:"quantization", mag_id:"28855332"}, {name:"perception", mag_id:"26760741"}, {name:"noise sensitivity", mag_id:"2908950400"}, {name:"geography", mag_id:"205649164"}, {name:"encoding", mag_id:"125411270"}, {name:"encode", mag_id:"66746571"}, {name:"computer vision", mag_id:"31972630"}, {name:"coding", mag_id:"179518139"}, {name:"categorization", mag_id:"94124525"}, {name:"brightness", mag_id:"125245961"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"rangarajan aravind", mag_id:"2303676077"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"barin g haskell", mag_id:"2917464579"}, {name:"atul puri", mag_id:"2778379561"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="rangarajan aravind" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2303676077")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"rangarajan aravind",MAG_id:"2303676077" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barin g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2917464579")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barin g haskell",MAG_id:"2917464579" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="atul puri" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2778379561")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"atul puri",MAG_id:"2778379561" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2153107790" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2153107790", title:"predictive vector quantization of images", language:"en@@@fr", year:"1985", date:"1985-11-01", citation_cnt:"94", fields:[{name:"vector quantization", mag_id:"199833920"}, {name:"robustness", mag_id:"97970142"}, {name:"residual", mag_id:"155512373"}, {name:"redundancy", mag_id:"152124472"}, {name:"quantization", mag_id:"28855332"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"image processing", mag_id:"9417928"}, {name:"encoder", mag_id:"118505674"}, {name:"biconnected component", mag_id:"90359558"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"john w woods", mag_id:"2694390396"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="john w woods" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2694390396")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"john w woods",MAG_id:"2694390396" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2116244303" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2116244303", title:"acceleration and implementation of jpeg2000 encoder on ti dsp platform", language:"en@@@zh_cht", year:"2007", date:"2007-09-01", citation_cnt:"7", fields:[{name:"scalability", mag_id:"48044578"}, {name:"real time computing", mag_id:"79403827"}, {name:"parallel computing", mag_id:"173608175"}, {name:"indexation", mag_id:"186311912"}, {name:"granularity", mag_id:"177774035"}, {name:"encoder", mag_id:"118505674"}, {name:"digital signal processing", mag_id:"84462506"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"cache", mag_id:"115537543"}, {name:"cpu cache", mag_id:"189783530"}, ],authors:[{name:"chienchih liu", mag_id:"2462209534"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chienchih liu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2462209534")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chienchih liu",MAG_id:"2462209534" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="114770412" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"114770412", title:"scene adaptive parameters selection for mpeg syntax based hdtv coding", language:"en", year:"1994", date:"1994-01-01", citation_cnt:"10", fields:[{name:"spectrum analyzer", mag_id:"158007255"}, {name:"residual frame", mag_id:"204641915"}, {name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"macroblock", mag_id:"124828224"}, {name:"human visual system model", mag_id:"160086991"}, {name:"encoder", mag_id:"118505674"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"bit field", mag_id:"183383400"}, ],authors:[{name:"weiyeh sun", mag_id:"2115884206"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"chungbin fong", mag_id:"2113263761"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weiyeh sun" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115884206")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weiyeh sun",MAG_id:"2115884206" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chungbin fong" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2113263761")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chungbin fong",MAG_id:"2113263761" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2123361586" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2123361586", title:"a fast mode decision algorithm with macroblock adaptive rate distortion estimation for intra only scalable video coding", language:"en", year:"2008", date:"2008-06-01", citation_cnt:"5", fields:[{name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"real time computing", mag_id:"79403827"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"macroblock", mag_id:"124828224"}, {name:"encoder", mag_id:"118505674"}, {name:"distortion", mag_id:"115225779"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithmic efficiency", mag_id:"116709606"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"hungchih lin", mag_id:"2235570058"}, {name:"wenhsiao peng", mag_id:"2143202554"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2235570058")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2235570058" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2092666677" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2092666677", title:"virtual view synthesis using backward depth warping algorithm", language:"en@@@zh_cht", year:"2013", date:"2013-12-01", citation_cnt:"6", fields:[{name:"view synthesis", mag_id:"2776449333"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"reference software", mag_id:"2776493296"}, {name:"quantization", mag_id:"28855332"}, {name:"image warping", mag_id:"157202957"}, {name:"depth map", mag_id:"141268832"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"duhsiu li", mag_id:"2231309336"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"yulun liu", mag_id:"2892902750"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="duhsiu li" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2231309336")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"duhsiu li",MAG_id:"2231309336" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yulun liu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2892902750")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yulun liu",MAG_id:"2892902750" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2055583520" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2055583520", title:"context based binary arithmetic coding for fine granuality scalability", language:"en@@@zh_cht", year:"2003", date:"2003-01-01", citation_cnt:"6", fields:[{name:"variable length code", mag_id:"60603091"}, {name:"tunstall coding", mag_id:"73231260"}, {name:"shannon fano coding", mag_id:"130811719"}, {name:"range encoding", mag_id:"27474726"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"harmonic vector excitation coding", mag_id:"80167644"}, {name:"context adaptive variable length coding", mag_id:"135534801"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"arithmetic coding", mag_id:"153338461"}, ],authors:[{name:"wenhsiao peng", mag_id:"2143202554"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2025497947" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2025497947", title:"a relevance feedback image retrieval scheme using multi instance and pseudo image concepts", language:"en@@@zh_cht", year:"2006", date:"2006-05-01", citation_cnt:"15", fields:[{name:"weighting", mag_id:"183115368"}, {name:"relevance feedback", mag_id:"2779532271"}, {name:"perception", mag_id:"26760741"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"image retrieval", mag_id:"1667742"}, {name:"feature extraction", mag_id:"52622490"}, {name:"feature detection", mag_id:"126422989"}, {name:"feature", mag_id:"7374053"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"automatic image annotation", mag_id:"199579030"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2100523451" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2100523451", title:"combined encryption and watermarking approaches for scalable multimedia coding", language:"en@@@zh_cht", year:"2004", date:"2004-11-30", citation_cnt:"11", fields:[{name:"watermarking attack", mag_id:"122760801"}, {name:"watermark", mag_id:"164112704"}, {name:"transmission system", mag_id:"113608303"}, {name:"scalability", mag_id:"48044578"}, {name:"multimedia", mag_id:"49774154"}, {name:"encryption", mag_id:"148730421"}, {name:"digital watermarking", mag_id:"150817343"}, {name:"digital watermarking alliance", mag_id:"193470923"}, {name:"cryptography", mag_id:"178489894"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="865056197" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"865056197", title:"learning based saliency model with depth information", language:"en@@@zh_cht", year:"2015", date:"2015-05-28", citation_cnt:"9", fields:[{name:"saliency map", mag_id:"2779679900"}, {name:"salience", mag_id:"108154423"}, {name:"psychology", mag_id:"15744967"}, {name:"fixation", mag_id:"137230775"}, {name:"eye tracking", mag_id:"56461940"}, {name:"eye movement", mag_id:"153050134"}, {name:"cognitive psychology", mag_id:"180747234"}, ],authors:[{name:"chihyao ma", mag_id:"2724070213"}, {name:"hsuehming hang", mag_id:"2894039465"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihyao ma" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2724070213")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihyao ma",MAG_id:"2724070213" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2894039465")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2105251682" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2105251682", title:"motion information scalability for mc ezbc", language:"en@@@zh_cht", year:"2004", date:"2004-08-01", citation_cnt:"17", fields:[{name:"wavelet", mag_id:"47432892"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"scalability", mag_id:"48044578"}, {name:"streams", mag_id:"42090638"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"motion vector", mag_id:"2779020251"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion compensation", mag_id:"128840427"}, {name:"inter frame", mag_id:"39394851"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"sam s tsai", mag_id:"2109915922"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sam s tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2109915922")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sam s tsai",MAG_id:"2109915922" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2032959684" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2032959684", title:"algorithms and dsp implementation of h 264 avc", language:"en", year:"2006", date:"2006-01-24", citation_cnt:"11", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"real time computing", mag_id:"79403827"}, {name:"program optimization", mag_id:"139571649"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion analysis", mag_id:"2777036941"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"digital signal processor", mag_id:"161611012"}, {name:"digital signal processing", mag_id:"84462506"}, {name:"computer science", mag_id:"41008148"}, {name:"computational complexity theory", mag_id:"179799912"}, {name:"codec", mag_id:"161765866"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"hungchih lin", mag_id:"2664065689"}, {name:"yujen wang", mag_id:"2665119239"}, {name:"kaiting cheng", mag_id:"2151626256"}, {name:"shangyu yeh", mag_id:"2603343884"}, {name:"weinien chen", mag_id:"2663564207"}, {name:"chiayang tsai", mag_id:"2677714804"}, {name:"tiansheuan chang", mag_id:"2695824493"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2664065689")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2664065689" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yujen wang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2665119239")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yujen wang",MAG_id:"2665119239" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="kaiting cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2151626256")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"kaiting cheng",MAG_id:"2151626256" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="shangyu yeh" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2603343884")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"shangyu yeh",MAG_id:"2603343884" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weinien chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2663564207")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weinien chen",MAG_id:"2663564207" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2677714804")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2677714804" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tiansheuan chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2695824493")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tiansheuan chang",MAG_id:"2695824493" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2064342306" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2064342306", title:"transform domain postprocessing of dct coded images", language:"en@@@zh_cht", year:"1993", date:"1993-10-22", citation_cnt:"18", fields:[{name:"optical engineering", mag_id:"151857401"}, {name:"image quality", mag_id:"55020928"}, {name:"distortion", mag_id:"115225779"}, {name:"discrete cosine transform", mag_id:"2221639"}, {name:"data compression", mag_id:"78548338"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"channel", mag_id:"156996364"}, {name:"coding", mag_id:"179518139"}, {name:"channel capacity", mag_id:"97744766"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chungnan tien", mag_id:"2563022678"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chungnan tien" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2563022678")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chungnan tien",MAG_id:"2563022678" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2150288772" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2150288772", title:"a new motion estimation method using frequency components", language:"en", year:"1997", date:"1997-03-01", citation_cnt:"19", fields:[{name:"video processing", mag_id:"65483669"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"phase correlation", mag_id:"93509452"}, {name:"motion estimation", mag_id:"10161872"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"component analysis", mag_id:"2780692498"}, {name:"block matching algorithm", mag_id:"167510206"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"ambiguity", mag_id:"2780522230"}, ],authors:[{name:"yungming chou", mag_id:"2471392096"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yungming chou" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2471392096")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yungming chou",MAG_id:"2471392096" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2027365316" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2027365316", title:"a reduced complexity image coding scheme using decision directed wavelet based contourlet transform", language:"en@@@zh_cht", year:"2012", date:"2012-10-01", citation_cnt:"5", fields:[{name:"wavelet transform", mag_id:"196216189"}, {name:"wavelet packet decomposition", mag_id:"155777637"}, {name:"stationary wavelet transform", mag_id:"73339587"}, {name:"second generation wavelet transform", mag_id:"111350171"}, {name:"s transform", mag_id:"99234102"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"lifting scheme", mag_id:"199550912"}, {name:"discrete wavelet transform", mag_id:"46286280"}, {name:"contourlet", mag_id:"20479862"}, {name:"computer vision", mag_id:"31972630"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chaohsiung hung", mag_id:"2460490460"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chaohsiung hung" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2460490460")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chaohsiung hung",MAG_id:"2460490460" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2048492912" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2048492912", title:"editorial advanced video technologies and applications for h 264 avc and beyond", language:"en@@@zh_cht", year:"2006", date:"2006-01-01", citation_cnt:"5", fields:[{name:"multimedia", mag_id:"49774154"}, {name:"computer science", mag_id:"41008148"}, {name:"commons", mag_id:"49427245"}, ],authors:[{name:"jarferr yang", mag_id:"2116738603"}, {name:"hsuehming hang", mag_id:"2686559041"}, {name:"eckehard g steinbach", mag_id:"2080966806"}, {name:"mingting sun", mag_id:"2151539187"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jarferr yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2116738603")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jarferr yang",MAG_id:"2116738603" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2686559041")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="eckehard g steinbach" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2080966806")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"eckehard g steinbach",MAG_id:"2080966806" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="mingting sun" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2151539187")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"mingting sun",MAG_id:"2151539187" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1045450483" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1045450483", title:"trick mode vtr tracking for compressed video", language:"en", year:"1995", date:"1995-06-07", citation_cnt:"16", fields:[{name:"sync", mag_id:"3913047"}, {name:"test data generation", mag_id:"47980962"}, {name:"disk formatting", mag_id:"88006597"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, ],authors:[{name:"houchun ting", mag_id:"1991728099"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"jangzern tsai", mag_id:"2125294317"}, {name:"chienchen liang", mag_id:"2103496729"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="houchun ting" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1991728099")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"houchun ting",MAG_id:"1991728099" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangzern tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2125294317")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangzern tsai",MAG_id:"2125294317" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chienchen liang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2103496729")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chienchen liang",MAG_id:"2103496729" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2029704104" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2029704104", title:"quality assessment of synthesized 3d video with distorted depth map", language:"en@@@zh_cht", year:"2014", date:"2014-12-01", citation_cnt:"1", fields:[{name:"structural similarity", mag_id:"139489369"}, {name:"rgb color model", mag_id:"82990744"}, {name:"depth map", mag_id:"141268832"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"2d to 3d conversion", mag_id:"84824328"}, ],authors:[{name:"hsinche liu", mag_id:"2231220063"}, {name:"hsuehming hang", mag_id:"2894305977"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsinche liu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2231220063")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsinche liu",MAG_id:"2231220063" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2894305977")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2116118917" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2116118917", title:"inverse halftoning for monochrome pictures", language:"en@@@zh_cht", year:"1994", date:"1994-01-01", citation_cnt:"6", fields:[{name:"operator", mag_id:"76449508"}, {name:"monochrome", mag_id:"2776754580"}, {name:"machine learning", mag_id:"119857082"}, {name:"low pass filter", mag_id:"44682112"}, {name:"iterative reconstruction", mag_id:"141379421"}, {name:"inverse problem", mag_id:"135252773"}, {name:"inverse", mag_id:"207467116"}, {name:"contextual image classification", mag_id:"75294576"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"adaptive filter", mag_id:"102248274"}, ],authors:[{name:"liming chen", mag_id:"2256288294"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="liming chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2256288294")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"liming chen",MAG_id:"2256288294" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2106166665" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2106166665", title:"on the design of pattern based block motion estimation algorithms", language:"en@@@zh_cht", year:"2010", date:"2010-01-01", citation_cnt:"4", fields:[{name:"signal processing", mag_id:"104267543"}, {name:"pattern search", mag_id:"82691427"}, {name:"motion estimation", mag_id:"10161872"}, {name:"genetic algorithm", mag_id:"8880873"}, {name:"experimental data", mag_id:"55037315"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"algorithmic efficiency", mag_id:"116709606"}, {name:"algorithm design", mag_id:"106516650"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"jangjer tsai", mag_id:"2813352915"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangjer tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2813352915")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangjer tsai",MAG_id:"2813352915" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2082273163" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2082273163", title:"research friendly mpeg 7 software testbed", language:"en@@@zh_cht", year:"2003", date:"2003-05-07", citation_cnt:"9", fields:[{name:"testbed", mag_id:"31395832"}, {name:"software framework", mag_id:"76518257"}, {name:"software", mag_id:"2777904410"}, {name:"real time computing", mag_id:"79403827"}, {name:"java", mag_id:"548217200"}, {name:"feature extraction", mag_id:"52622490"}, {name:"computer science", mag_id:"41008148"}, {name:"computer architecture", mag_id:"118524514"}, {name:"architecture", mag_id:"123657996"}, {name:"abstraction", mag_id:"124304363"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"hsiangchen huang", mag_id:"2631713142"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangchen huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2631713142")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangchen huang",MAG_id:"2631713142" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2055609499" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2055609499", title:"adaptive piecewise linear bits estimation model for mpeg based video coding", language:"en@@@zh_cht", year:"1997", date:"1997-03-01", citation_cnt:"13", fields:[{name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"piecewise linear function", mag_id:"17095337"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"encoder", mag_id:"118505674"}, {name:"effective number of bits", mag_id:"16671190"}, {name:"data compression", mag_id:"78548338"}, {name:"control theory", mag_id:"65244806"}, {name:"bit stuffing", mag_id:"40547706"}, {name:"bit field", mag_id:"183383400"}, {name:"bit array", mag_id:"150807984"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jiabao cheng", mag_id:"2127380347"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jiabao cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2127380347")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jiabao cheng",MAG_id:"2127380347" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1981747510" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1981747510", title:"quality assessment of 3d synthesized views with depth map distortion", language:"en@@@zh_cht", year:"2013", date:"2013-11-01", citation_cnt:"6", fields:[{name:"rendering", mag_id:"205711294"}, {name:"iterative reconstruction", mag_id:"141379421"}, {name:"image based modeling and rendering", mag_id:"44185422"}, {name:"image restoration", mag_id:"106430172"}, {name:"image quality", mag_id:"55020928"}, {name:"free viewpoint television", mag_id:"2779777359"}, {name:"depth map", mag_id:"141268832"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"color image", mag_id:"142616399"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"changting tsai", mag_id:"2646631977"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="changting tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2646631977")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"changting tsai",MAG_id:"2646631977" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2140323326" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2140323326", title:"cascaded trellis based rate distortion control algorithm for mpeg 4 advanced audio coding", language:"en@@@zh_cht", year:"2006", date:"2006-05-01", citation_cnt:"7", fields:[{name:"speech recognition", mag_id:"28490314"}, {name:"speech coding", mag_id:"13895895"}, {name:"sound quality", mag_id:"167310288"}, {name:"mpeg 4", mag_id:"97501218"}, {name:"encoder", mag_id:"118505674"}, {name:"controller", mag_id:"79699506"}, {name:"computer science", mag_id:"41008148"}, {name:"computational complexity theory", mag_id:"179799912"}, {name:"audio signal processing", mag_id:"127220857"}, {name:"algorithm", mag_id:"11413529"}, {name:"advanced audio coding", mag_id:"182292516"}, ],authors:[{name:"chenghan yang", mag_id:"2309711285"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chenghan yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2309711285")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chenghan yang",MAG_id:"2309711285" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2415513081" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2415513081", title:"method and apparatus for controlling quantization and buffering for digital signal compression", language:"en", year:"1994", date:"1994-12-29", citation_cnt:"18", fields:[{name:"size value", mag_id:"2909837007"}, {name:"quantization", mag_id:"28855332"}, {name:"mathematics", mag_id:"33923547"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"digital signal", mag_id:"52773712"}, {name:"compression", mag_id:"180016635"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"barin g haskell", mag_id:"2917464579"}, {name:"sheizein kiang", mag_id:"2415175290"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="barin g haskell" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2917464579")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"barin g haskell",MAG_id:"2917464579" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sheizein kiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2415175290")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sheizein kiang",MAG_id:"2415175290" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="271053406" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"271053406", title:"method and apparatus for interframe wavelet video coding", language:"en@@@zh_cht", year:"2004", date:"2004-03-11", citation_cnt:"11", fields:[{name:"variable bitrate", mag_id:"57667952"}, {name:"sub band coding", mag_id:"98526533"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"motion compensation", mag_id:"128840427"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"sam s tsai", mag_id:"2109915922"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"chiayang tsai", mag_id:"2629393198"}, {name:"tihao chiang", mag_id:"2063714035"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sam s tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2109915922")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sam s tsai",MAG_id:"2109915922" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2629393198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2629393198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2477699211" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2477699211", title:"an introduction to watermarking techniques", language:"en@@@zh_cht", year:"2004", date:"2004-02-01", citation_cnt:"14", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"digital watermarking", mag_id:"150817343"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"jengshyang pan", mag_id:"2126295343"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jengshyang pan" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2126295343")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jengshyang pan",MAG_id:"2126295343" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2793188528" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2793188528", title:"learning based human detection applied to rgb d images", language:"zh_cht", year:"2017", date:"2017-09-01", citation_cnt:"1", fields:[{name:"support vector machine", mag_id:"12267149"}, {name:"robustness", mag_id:"97970142"}, {name:"rgb color model", mag_id:"82990744"}, {name:"principal component analysis", mag_id:"27438332"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"feature extraction", mag_id:"52622490"}, {name:"depth map", mag_id:"141268832"}, {name:"convolutional neural network", mag_id:"81363708"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"patrisia sherryl santoso", mag_id:"2793933559"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="patrisia sherryl santoso" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2793933559")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"patrisia sherryl santoso",MAG_id:"2793933559" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="285803506" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"285803506", title:"vtr tape format for compressed digital video using overlapped areas for forward and reverse high speed playback", language:"en@@@ja", year:"1997", date:"1997-06-30", citation_cnt:"19", fields:[{name:"sync", mag_id:"3913047"}, {name:"test data generation", mag_id:"47980962"}, {name:"disk formatting", mag_id:"88006597"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, ],authors:[{name:"houchun ting", mag_id:"1991728099"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"jangzern tsai", mag_id:"2125294317"}, {name:"chienchen liang", mag_id:"2103496729"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="houchun ting" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1991728099")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"houchun ting",MAG_id:"1991728099" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangzern tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2125294317")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangzern tsai",MAG_id:"2125294317" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chienchen liang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2103496729")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chienchen liang",MAG_id:"2103496729" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="131769480" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"131769480", title:"trick mode vtr which generates trick play data from a stream of images containing intra pictures and predictive pictures and selects specific dct coefficients for intra pictures", language:"en", year:"1997", date:"1997-11-24", citation_cnt:"11", fields:[{name:"sync", mag_id:"3913047"}, {name:"test data generation", mag_id:"47980962"}, {name:"disk formatting", mag_id:"88006597"}, {name:"discrete cosine transform", mag_id:"2221639"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, ],authors:[{name:"houchun ting", mag_id:"1991728099"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"jangzern tsai", mag_id:"2125294317"}, {name:"chienchen liang", mag_id:"2103496729"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="houchun ting" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("1991728099")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"houchun ting",MAG_id:"1991728099" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangzern tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2125294317")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangzern tsai",MAG_id:"2125294317" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chienchen liang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2103496729")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chienchen liang",MAG_id:"2103496729" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2001612745" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2001612745", title:"multiview encoder parallelized fast search realization on nvidia cuda", language:"en", year:"2011", date:"2011-11-01", citation_cnt:"6", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"speedup", mag_id:"68339613"}, {name:"search algorithm", mag_id:"125583679"}, {name:"simd", mag_id:"150552126"}, {name:"parallel computing", mag_id:"173608175"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"graphics processing unit", mag_id:"2779851693"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"cuda", mag_id:"2778119891"}, {name:"architecture", mag_id:"123657996"}, ],authors:[{name:"chihte lu", mag_id:"2223456198"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihte lu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2223456198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihte lu",MAG_id:"2223456198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2004335693" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2004335693", title:"a switchable drm structure for embedded device", language:"en@@@zh_cht", year:"2007", date:"2007-11-01", citation_cnt:"6", fields:[{name:"programming complexity", mag_id:"66429209"}, {name:"open system", mag_id:"175690228"}, {name:"interoperability", mag_id:"20136886"}, {name:"embedded system", mag_id:"149635348"}, {name:"digital rights management", mag_id:"537843408"}, {name:"digital media", mag_id:"17632256"}, {name:"content management", mag_id:"33039251"}, {name:"computer science", mag_id:"41008148"}, {name:"architecture", mag_id:"123657996"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"chiaolin wu", mag_id:"2226655047"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiaolin wu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2226655047")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiaolin wu",MAG_id:"2226655047" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1834384059" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1834384059", title:"context based binary arithmetic coding with stochastic bit reshuffling for advanced fine granularity scalability", language:"en@@@zh_cht", year:"2004", date:"2004-01-01", citation_cnt:"6", fields:[{name:"transform coding", mag_id:"169805256"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"real time computing", mag_id:"79403827"}, {name:"raster scan", mag_id:"145406643"}, {name:"granularity", mag_id:"177774035"}, {name:"encoder", mag_id:"118505674"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"discrete cosine transform", mag_id:"2221639"}, {name:"computer science", mag_id:"41008148"}, {name:"arithmetic coding", mag_id:"153338461"}, ],authors:[{name:"wenhsiao peng", mag_id:"2143202554"}, {name:"chungneng wang", mag_id:"2110649880"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chungneng wang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2110649880")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chungneng wang",MAG_id:"2110649880" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="93445303" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"93445303", title:"source model for transform video coder and its application part i ii", language:"en@@@zh_cht", year:"1997", date:"1997-01-01", citation_cnt:"7", fields:[{name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jie chen", mag_id:"2107898627"}, {name:"hsuehming hang", mag_id:"2715059107"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jie chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2107898627")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jie chen",MAG_id:"2107898627" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2715059107")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2124463270" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2124463270", title:"fgs based video streaming test bed for mpeg 21 universal multimedia access with digital item adaptation", language:"en@@@zh_cht", year:"2003", date:"2003-01-01", citation_cnt:"7", fields:[{name:"universal multimedia access", mag_id:"2777435976"}, {name:"unicast", mag_id:"11704745"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"real time computing", mag_id:"79403827"}, {name:"quality of service", mag_id:"5119721"}, {name:"network interface", mag_id:"103987645"}, {name:"mpeg 21", mag_id:"2779266010"}, {name:"heterogeneous network", mag_id:"158207573"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, {name:"channel", mag_id:"156996364"}, ],authors:[{name:"chungneng wang", mag_id:"2110649880"}, {name:"chiayang tsai", mag_id:"2629393198"}, {name:"hsiaochiang chuang", mag_id:"2096463991"}, {name:"yaochung lin", mag_id:"2149978322"}, {name:"jinhe chen", mag_id:"2547254607"}, {name:"kin lam tong", mag_id:"2225215406"}, {name:"fengcheng chang", mag_id:"2794344490"}, {name:"chunjen tsai", mag_id:"2701292362"}, {name:"shuhying lee", mag_id:"2668353980"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chungneng wang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2110649880")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chungneng wang",MAG_id:"2110649880" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2629393198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2629393198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiaochiang chuang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2096463991")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiaochiang chuang",MAG_id:"2096463991" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yaochung lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2149978322")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yaochung lin",MAG_id:"2149978322" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jinhe chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2547254607")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jinhe chen",MAG_id:"2547254607" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="kin lam tong" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2225215406")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"kin lam tong",MAG_id:"2225215406" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chunjen tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2701292362")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chunjen tsai",MAG_id:"2701292362" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="shuhying lee" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2668353980")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"shuhying lee",MAG_id:"2668353980" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2140400541" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2140400541", title:"a transform video coder source model and its application", language:"en@@@zh_cht", year:"1994", date:"1994-01-01", citation_cnt:"9", fields:[{name:"variable frame rate", mag_id:"2778640323"}, {name:"transform coding", mag_id:"169805256"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"residual frame", mag_id:"204641915"}, {name:"rate distortion theory", mag_id:"64185310"}, {name:"quantization", mag_id:"28855332"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"frame rate", mag_id:"3261483"}, {name:"distortion", mag_id:"115225779"}, {name:"dictionary coder", mag_id:"55652533"}, {name:"control theory", mag_id:"65244806"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jiannjone chen", mag_id:"2131075715"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jiannjone chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2131075715")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jiannjone chen",MAG_id:"2131075715" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2103638658" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2103638658", title:"rate distortion model for motion prediction efficiency in scalable wavelet video coding", language:"en@@@zh_cht", year:"2009", date:"2009-05-01", citation_cnt:"9", fields:[{name:"wavelet transform", mag_id:"196216189"}, {name:"wavelet", mag_id:"47432892"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"rate distortion optimization", mag_id:"50056821"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion compensation", mag_id:"128840427"}, {name:"mathematics", mag_id:"33923547"}, {name:"coding tree unit", mag_id:"190750250"}, ],authors:[{name:"chiayang tsai", mag_id:"2894071824"}, {name:"hsuehming hang", mag_id:"2893686051"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2894071824")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2894071824" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2893686051")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1985523950" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1985523950", title:"edge preserving interpolation of digital images using fuzzy inference", language:"en@@@zh_cht", year:"1997", date:"1997-12-01", citation_cnt:"19", fields:[{name:"pixel", mag_id:"160633673"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"oblique case", mag_id:"160697094"}, {name:"mathematics", mag_id:"33923547"}, {name:"interpolation", mag_id:"17378031"}, {name:"inference", mag_id:"2776214188"}, {name:"fuzzy logic", mag_id:"58166"}, {name:"digital image", mag_id:"42781572"}, {name:"detector", mag_id:"94915269"}, {name:"computer vision", mag_id:"31972630"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"houchun ting", mag_id:"2695463087"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="houchun ting" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2695463087")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"houchun ting",MAG_id:"2695463087" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2107189418" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2107189418", title:"a genetic rhombus pattern search for block motion estimation", language:"en@@@zh_cht", year:"2007", date:"2007-05-01", citation_cnt:"4", fields:[{name:"weighting", mag_id:"183115368"}, {name:"weight function", mag_id:"134466208"}, {name:"search algorithm", mag_id:"125583679"}, {name:"rhombus", mag_id:"161903591"}, {name:"pattern search", mag_id:"82691427"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"pattern matching", mag_id:"68859911"}, {name:"motion estimation", mag_id:"10161872"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm design", mag_id:"106516650"}, ],authors:[{name:"jangjer tsai", mag_id:"2894111208"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangjer tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2894111208")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangjer tsai",MAG_id:"2894111208" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2061494606" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2061494606", title:"fast temporal prediction selection for h 264 avc scalable video coding", language:"en@@@zh_cht", year:"2009", date:"2009-11-01", citation_cnt:"6", fields:[{name:"tunstall coding", mag_id:"73231260"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"machine learning", mag_id:"119857082"}, {name:"context adaptive variable length coding", mag_id:"135534801"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"code excited linear prediction", mag_id:"105964291"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hungchih lin", mag_id:"2235570058"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"wenhsiao peng", mag_id:"2143202554"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2235570058")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2235570058" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2544279536" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2544279536", title:"efficient bit allocation algorithm for mpeg 4 advanced audio coding", language:"en@@@zh_cht", year:"2006", date:"2006-10-01", citation_cnt:"4", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"mpeg 4", mag_id:"97501218"}, {name:"computer science", mag_id:"41008148"}, {name:"computational complexity theory", mag_id:"179799912"}, {name:"coding", mag_id:"179518139"}, {name:"bit field", mag_id:"183383400"}, {name:"algorithm", mag_id:"11413529"}, {name:"advanced audio coding", mag_id:"182292516"}, ],authors:[{name:"chenghan yang", mag_id:"2636535337"}, {name:"hsuehming hang", mag_id:"2631979405"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chenghan yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2636535337")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chenghan yang",MAG_id:"2636535337" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2631979405")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2108908760" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2108908760", title:"analysis of atsc field test results in taiwan", language:"en@@@zh_cht", year:"2002", date:"2002-03-01", citation_cnt:"6", fields:[{name:"transmission system", mag_id:"113608303"}, {name:"telecommunications", mag_id:"76155785"}, {name:"software deployment", mag_id:"105339364"}, {name:"ntsc", mag_id:"152622121"}, {name:"multipath propagation", mag_id:"161218011"}, {name:"fading", mag_id:"81978471"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"digital television", mag_id:"520681616"}, {name:"digital signal", mag_id:"52773712"}, {name:"data transmission", mag_id:"557945733"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"chaichin lin", mag_id:"2895275460"}, {name:"chihming chen", mag_id:"2660446016"}, {name:"jennhwan tarng", mag_id:"2797205160"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"hsiaocheng yu", mag_id:"2123958116"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chaichin lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2895275460")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chaichin lin",MAG_id:"2895275460" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihming chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2660446016")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihming chen",MAG_id:"2660446016" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jennhwan tarng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2797205160")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jennhwan tarng",MAG_id:"2797205160" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiaocheng yu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2123958116")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiaocheng yu",MAG_id:"2123958116" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2132193917" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2132193917", title:"adaptive piecewise linear bits estimation model for mpeg based video coding", language:"en@@@zh_cht", year:"1995", date:"1995-01-01", citation_cnt:"11", fields:[{name:"tree structure", mag_id:"163797641"}, {name:"piecewise linear function", mag_id:"17095337"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"macroblock", mag_id:"124828224"}, {name:"least mean squares filter", mag_id:"32617633"}, {name:"estimation theory", mag_id:"167928553"}, {name:"effective number of bits", mag_id:"16671190"}, {name:"computer science", mag_id:"41008148"}, {name:"bit field", mag_id:"183383400"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm", mag_id:"11413529"}, {name:"adaptive filter", mag_id:"102248274"}, ],authors:[{name:"jiabao cheng", mag_id:"2127380347"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jiabao cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2127380347")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jiabao cheng",MAG_id:"2127380347" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2054831043" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2054831043", title:"image feature based robust digital watermarking scheme", language:"en@@@zh_cht", year:"2002", date:"2002-04-29", citation_cnt:"8", fields:[{name:"mathematics", mag_id:"33923547"}, {name:"image texture", mag_id:"63099799"}, {name:"image restoration", mag_id:"106430172"}, {name:"image processing", mag_id:"9417928"}, {name:"feature extraction", mag_id:"52622490"}, {name:"feature detection", mag_id:"126422989"}, {name:"feature", mag_id:"7374053"}, {name:"digital image processing", mag_id:"104317675"}, {name:"computer vision", mag_id:"31972630"}, {name:"binary image", mag_id:"193828747"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chihwei tang", mag_id:"2124607893"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihwei tang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2124607893")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihwei tang",MAG_id:"2124607893" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2890672676" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2890672676", title:"an autoencoder based learned image compressor description of challenge proposal by nctu", language:"en", year:"2018", date:"2018-01-01", citation_cnt:"0", fields:[{name:"quantization", mag_id:"28855332"}, {name:"pixel", mag_id:"160633673"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mean squared error", mag_id:"139945424"}, {name:"lossy compression", mag_id:"165021410"}, {name:"image compression", mag_id:"13481523"}, {name:"encoder", mag_id:"118505674"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"autoencoder", mag_id:"101738243"}, {name:"artificial neural network", mag_id:"50644808"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"david alexandre", mag_id:"2891207835"}, {name:"chihpeng chang", mag_id:"2890845568"}, {name:"wenhsiao peng", mag_id:"2143202554"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="david alexandre" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2891207835")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"david alexandre",MAG_id:"2891207835" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihpeng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2890845568")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihpeng chang",MAG_id:"2890845568" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2156624750" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2156624750", title:"image coding using short wavelet based contourlet transform", language:"en@@@zh_cht", year:"2008", date:"2008-10-01", citation_cnt:"3", fields:[{name:"wavelet transform", mag_id:"196216189"}, {name:"wavelet", mag_id:"47432892"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"image texture", mag_id:"63099799"}, {name:"image resolution", mag_id:"205372480"}, {name:"image quality", mag_id:"55020928"}, {name:"filter bank", mag_id:"100515483"}, {name:"data compression", mag_id:"78548338"}, {name:"contourlet", mag_id:"20479862"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chaohsiung hung", mag_id:"2810245499"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chaohsiung hung" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2810245499")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chaohsiung hung",MAG_id:"2810245499" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2070275467" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2070275467", title:"fast algorithm on selecting bi directional prediction type in h 264 avc scalable video coding", language:"en@@@zh_cht", year:"2010", date:"2010-05-01", citation_cnt:"3", fields:[{name:"thresholding", mag_id:"191178318"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"pixel", mag_id:"160633673"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"distortion", mag_id:"115225779"}, {name:"computer science", mag_id:"41008148"}, {name:"coding", mag_id:"179518139"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"hungchih lin", mag_id:"2893645169"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2893645169")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2893645169" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2155247238" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2155247238", title:"efficient bit assignment strategy for perceptual audio coding", language:"en@@@zh_cht", year:"2003", date:"2003-01-01", citation_cnt:"5", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"real time computing", mag_id:"79403827"}, {name:"harmonic vector excitation coding", mag_id:"80167644"}, {name:"computer science", mag_id:"41008148"}, {name:"bit numbering", mag_id:"84369117"}, {name:"bit manipulation", mag_id:"1629781"}, {name:"bit field", mag_id:"183383400"}, {name:"bit error rate", mag_id:"56296756"}, {name:"bit array", mag_id:"150807984"}, {name:"audio bit depth", mag_id:"143351471"}, {name:"8 n 1", mag_id:"150425919"}, ],authors:[{name:"chenghan yang", mag_id:"2309711285"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chenghan yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2309711285")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chenghan yang",MAG_id:"2309711285" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1707446565" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1707446565", title:"adding selective enhancement in scalable video coding for region of interest functionality", language:"en@@@zh_cht", year:"2006", date:"2006-01-01", citation_cnt:"3", fields:[{name:"transform coding", mag_id:"169805256"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"region of interest", mag_id:"19609008"}, {name:"real time computing", mag_id:"79403827"}, {name:"quantization", mag_id:"28855332"}, {name:"macroblock", mag_id:"124828224"}, {name:"lossless compression", mag_id:"81081738"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"block code", mag_id:"157125643"}, ],authors:[{name:"wenhsiao peng", mag_id:"2143202554"}, {name:"tihao chiang", mag_id:"2063714035"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tihao chiang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2063714035")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tihao chiang",MAG_id:"2063714035" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2345552163" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2345552163", title:"motion estimation for image sequence compression", language:"en", year:"1995", date:"1995-10-01", citation_cnt:"10", fields:[{name:"texture compression", mag_id:"54243161"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"motion estimation", mag_id:"10161872"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"compression", mag_id:"180016635"}, {name:"block matching algorithm", mag_id:"167510206"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hsuehming hang", mag_id:"2125123575"}, {name:"yungming chou", mag_id:"2471392096"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yungming chou" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2471392096")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yungming chou",MAG_id:"2471392096" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2105711118" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2105711118", title:"fast bi directional prediction selection in h 264 mpeg 4 avc temporal scalable video coding", language:"en@@@zh_cht", year:"2011", date:"2011-12-01", citation_cnt:"2", fields:[{name:"thresholding", mag_id:"191178318"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"scalability", mag_id:"48044578"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mpeg 4", mag_id:"97501218"}, {name:"encoding", mag_id:"125411270"}, {name:"data compression", mag_id:"78548338"}, {name:"computer science", mag_id:"41008148"}, {name:"coding", mag_id:"179518139"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm design", mag_id:"106516650"}, ],authors:[{name:"hungchih lin", mag_id:"2235570058"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"wenhsiao peng", mag_id:"2143202554"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hungchih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2235570058")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hungchih lin",MAG_id:"2235570058" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="wenhsiao peng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2143202554")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"wenhsiao peng",MAG_id:"2143202554" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1540374632" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1540374632", title:"fast bit allocation method for audio coding", language:"en@@@ja@@@zh_cht", year:"2004", date:"2004-06-28", citation_cnt:"9", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"real time computing", mag_id:"79403827"}, {name:"huffman coding", mag_id:"46900642"}, {name:"experimental data", mag_id:"55037315"}, {name:"computer science", mag_id:"41008148"}, {name:"computation", mag_id:"45374587"}, {name:"coding", mag_id:"179518139"}, {name:"codebook", mag_id:"127759330"}, ],authors:[{name:"chenghan yang", mag_id:"2672542782"}, {name:"hsuehming hang", mag_id:"2707393382"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chenghan yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2672542782")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chenghan yang",MAG_id:"2672542782" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2707393382")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2113777562" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2113777562", title:"the impact of rate control algorithms on video codec hardware design", language:"en@@@zh_cht", year:"1997", date:"1997-01-01", citation_cnt:"5", fields:[{name:"very large scale integration", mag_id:"14580979"}, {name:"transform coding", mag_id:"169805256"}, {name:"theoretical computer science", mag_id:"80444323"}, {name:"real time computing", mag_id:"79403827"}, {name:"image quality", mag_id:"55020928"}, {name:"electronic system level design and verification", mag_id:"77495112"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, {name:"coding", mag_id:"179518139"}, {name:"codec", mag_id:"161765866"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"sheuchih cheng", mag_id:"2150294388"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="sheuchih cheng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2150294388")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"sheuchih cheng",MAG_id:"2150294388" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2171427378" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2171427378", title:"an improved presentation method for relevance feedback in a content based image retrieval system", language:"en@@@zh_cht", year:"2008", date:"2008-08-01", citation_cnt:"2", fields:[{name:"user interface", mag_id:"89505385"}, {name:"transform coding", mag_id:"169805256"}, {name:"relevance feedback", mag_id:"2779532271"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"multidimensional scaling", mag_id:"91682802"}, {name:"information retrieval", mag_id:"23123220"}, {name:"image retrieval", mag_id:"1667742"}, {name:"content based image retrieval", mag_id:"2780052074"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"anomaly detection", mag_id:"739882"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1992751180" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1992751180", title:"spatially adaptive interpolation of digital images using fuzzy inference", language:"en@@@zh_cht", year:"1996", date:"1996-02-27", citation_cnt:"10", fields:[{name:"pixel", mag_id:"160633673"}, {name:"operator", mag_id:"76449508"}, {name:"mathematics", mag_id:"33923547"}, {name:"interpolation", mag_id:"17378031"}, {name:"image scaling", mag_id:"27405340"}, {name:"fuzzy logic", mag_id:"58166"}, {name:"fuzzy control system", mag_id:"195975749"}, {name:"digital imaging", mag_id:"112416745"}, {name:"digital image", mag_id:"42781572"}, {name:"computer vision", mag_id:"31972630"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"hou chun ting", mag_id:"2720405699"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hou chun ting" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2720405699")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hou chun ting",MAG_id:"2720405699" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1533174982" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1533174982", title:"cascaded trellis based optimization for mpeg 4 advanced audio coding", language:"en", year:"2003", date:"2003-10-01", citation_cnt:"6", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"speech coding", mag_id:"13895895"}, {name:"mpeg 4 part 3", mag_id:"44471074"}, {name:"mpeg 4", mag_id:"97501218"}, {name:"engineering", mag_id:"127413603"}, {name:"electronic engineering", mag_id:"24326235"}, {name:"advanced audio coding", mag_id:"182292516"}, ],authors:[{name:"chenghan yang", mag_id:"2309711285"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chenghan yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2309711285")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chenghan yang",MAG_id:"2309711285" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2890458717" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2890458717", title:"efficient road lane marking detection with deep learning", language:"en", year:"2018", date:"2018-11-01", citation_cnt:"1", fields:[{name:"polynomial", mag_id:"90119067"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"image segmentation", mag_id:"124504099"}, {name:"detector", mag_id:"94915269"}, {name:"deep learning", mag_id:"108583219"}, {name:"decoding methods", mag_id:"57273362"}, {name:"convolutional neural network", mag_id:"81363708"}, {name:"convolution", mag_id:"152003226"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"pingrong chen", mag_id:"2892257922"}, {name:"shaoyuan lo", mag_id:"2890382083"}, {name:"hsuehming hang", mag_id:"2892143638"}, {name:"shengwei chan", mag_id:"2890593380"}, {name:"jingjhih lin", mag_id:"2890204209"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="pingrong chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2892257922")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"pingrong chen",MAG_id:"2892257922" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="shaoyuan lo" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2890382083")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"shaoyuan lo",MAG_id:"2890382083" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892143638")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="shengwei chan" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2890593380")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"shengwei chan",MAG_id:"2890593380" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jingjhih lin" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2890204209")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jingjhih lin",MAG_id:"2890204209" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2063485890" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2063485890", title:"design and implementation of an mhp video and graphics subsystem on xilinx ml310 platform", language:"en@@@zh_cht", year:"2006", date:"2006-12-01", citation_cnt:"1", fields:[{name:"rendering", mag_id:"205711294"}, {name:"reference software", mag_id:"2776493296"}, {name:"multiplexing", mag_id:"19275194"}, {name:"multimedia home platform", mag_id:"2777232856"}, {name:"java", mag_id:"548217200"}, {name:"graphics", mag_id:"21442007"}, {name:"embedded system", mag_id:"149635348"}, {name:"digital video broadcasting", mag_id:"551482933"}, {name:"computer science", mag_id:"41008148"}, {name:"clipping", mag_id:"33206468"}, ],authors:[{name:"minhong chen", mag_id:"2226008631"}, {name:"fengcheng chang", mag_id:"2894197157"}, {name:"hsuehming hang", mag_id:"2892711632"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="minhong chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2226008631")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"minhong chen",MAG_id:"2226008631" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2894197157")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2894197157" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892711632")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2756595905" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2756595905", title:"online multiclass passive aggressive learning on a fixed budget", language:"en@@@zh_cht", year:"2017", date:"2017-05-01", citation_cnt:"0", fields:[{name:"population based incremental learning", mag_id:"184497298"}, {name:"multiclass classification", mag_id:"123860398"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"machine learning", mag_id:"119857082"}, {name:"kernelization", mag_id:"207225210"}, {name:"kernel", mag_id:"99018454"}, {name:"exploit", mag_id:"165696696"}, {name:"data modeling", mag_id:"67186912"}, {name:"data in use", mag_id:"2779263037"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chunghao wu", mag_id:"2135888532"}, {name:"weichen his", mag_id:"2760208718"}, {name:"henry horngshing lu", mag_id:"2103154382"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chunghao wu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2135888532")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chunghao wu",MAG_id:"2135888532" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="weichen his" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2760208718")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"weichen his",MAG_id:"2760208718" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="henry horngshing lu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2103154382")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"henry horngshing lu",MAG_id:"2103154382" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2149648839" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2149648839", title:"exploring effective coefficients in transform domain perceptual watermarking", language:"en@@@zh_cht", year:"2003", date:"2003-06-13", citation_cnt:"4", fields:[{name:"watermark", mag_id:"164112704"}, {name:"visual threshold", mag_id:"2910351218"}, {name:"robustness", mag_id:"97970142"}, {name:"jpeg", mag_id:"198751489"}, {name:"image compression", mag_id:"13481523"}, {name:"distortion", mag_id:"115225779"}, {name:"discrete cosine transform", mag_id:"2221639"}, {name:"digital watermarking", mag_id:"150817343"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"chihwei tang", mag_id:"2124607893"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chihwei tang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2124607893")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chihwei tang",MAG_id:"2124607893" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2002464234" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2002464234", title:"dynamic resource allocation for vbr video transmission", language:"en@@@zh_cht", year:"1998", date:"1998-12-28", citation_cnt:"1", fields:[{name:"variable bitrate", mag_id:"57667952"}, {name:"smoothing", mag_id:"3770464"}, {name:"streams", mag_id:"42090638"}, {name:"resource allocation", mag_id:"29202148"}, {name:"real time computing", mag_id:"79403827"}, {name:"quality of service", mag_id:"5119721"}, {name:"image processing", mag_id:"9417928"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, {name:"asynchronous transfer mode", mag_id:"194571728"}, {name:"admission control", mag_id:"2778234956"}, ],authors:[{name:"hsiuchi yang", mag_id:"2335364565"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiuchi yang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2335364565")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiuchi yang",MAG_id:"2335364565" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2105722832" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2105722832", title:"on modeling genetic pattern search for block motion estimation", language:"en@@@zh_cht", year:"2008", date:"2008-10-01", citation_cnt:"0", fields:[{name:"weight function", mag_id:"134466208"}, {name:"search algorithm", mag_id:"125583679"}, {name:"pattern search", mag_id:"82691427"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"machine learning", mag_id:"119857082"}, {name:"incremental heuristic search", mag_id:"139979381"}, {name:"genetic algorithm", mag_id:"8880873"}, {name:"bidirectional search", mag_id:"831591"}, {name:"best first search", mag_id:"46011968"}, {name:"beam search", mag_id:"19889080"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"jangjer tsai", mag_id:"2719069511"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jangjer tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2719069511")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jangjer tsai",MAG_id:"2719069511" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2576091762" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2576091762", title:"an image based overexposed taillight detection method for frontal vehicle detection in night vision", language:"zh_cht", year:"2016", date:"2016-12-01", citation_cnt:"1", fields:[{name:"pairing", mag_id:"14103023"}, {name:"effective method", mag_id:"91559456"}, {name:"consistency criterion", mag_id:"2781447436"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chunliang chien", mag_id:"2746689088"}, {name:"hsuehming hang", mag_id:"2892913700"}, {name:"dinchang tseng", mag_id:"2460509539"}, {name:"yongsheng chen", mag_id:"2163107223"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chunliang chien" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2746689088")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chunliang chien",MAG_id:"2746689088" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892913700")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="dinchang tseng" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2460509539")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"dinchang tseng",MAG_id:"2460509539" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yongsheng chen" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2163107223")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yongsheng chen",MAG_id:"2163107223" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2487740460" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2487740460", title:"watermarking based on transform domain", language:"zh_cht", year:"2004", date:"2004-02-01", citation_cnt:"5", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"digital watermarking", mag_id:"150817343"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"jengshyang pan", mag_id:"2126295343"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jengshyang pan" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2126295343")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jengshyang pan",MAG_id:"2126295343" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2064223425" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2064223425", title:"a rate distortion analysis on motion prediction efficiency and mode decision for scalable wavelet video coding", language:"en@@@zh_cht", year:"2010", date:"2010-11-01", citation_cnt:"4", fields:[{name:"wavelet", mag_id:"47432892"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"rate distortion optimization", mag_id:"50056821"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"motion compensation", mag_id:"128840427"}, {name:"inter frame", mag_id:"39394851"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chiayang tsai", mag_id:"2629393198"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2629393198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2629393198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2578267060" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2578267060", title:"intra block copy hash reduction for hevc screen content coding", language:"zh_cht", year:"2016", date:"2016-12-01", citation_cnt:"1", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"parallel computing", mag_id:"173608175"}, {name:"multiview video coding", mag_id:"23431618"}, {name:"memory management", mag_id:"176649486"}, {name:"key generation", mag_id:"163173736"}, {name:"hash table", mag_id:"67388219"}, {name:"hash function", mag_id:"99138194"}, {name:"context adaptive binary arithmetic coding", mag_id:"175732694"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"cloud gaming", mag_id:"2779733813"}, ],authors:[{name:"chewei kuo", mag_id:"2659276506"}, {name:"hsuehming hang", mag_id:"2892913700"}, {name:"chunliang chien", mag_id:"2746689088"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chewei kuo" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2659276506")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chewei kuo",MAG_id:"2659276506" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892913700")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chunliang chien" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2746689088")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chunliang chien",MAG_id:"2746689088" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2149477602" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2149477602", title:"ρ ggd source modeling for wavelet coefficients in image video coding", language:"en@@@zh_cht", year:"2008", date:"2008-06-01", citation_cnt:"4", fields:[{name:"wavelet transform", mag_id:"196216189"}, {name:"wavelet", mag_id:"47432892"}, {name:"standard deviation", mag_id:"22679943"}, {name:"shape parameter", mag_id:"199435849"}, {name:"probability distribution", mag_id:"149441793"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mathematics", mag_id:"33923547"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"laplace distribution", mag_id:"183057437"}, {name:"generalized normal distribution", mag_id:"171383496"}, {name:"discrete wavelet transform", mag_id:"46286280"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chiayang tsai", mag_id:"2656783266"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2656783266")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2656783266" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2106003819" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2106003819", title:"enhanced motion estimation for interframe wavelet video coding", language:"en@@@zh_cht", year:"2004", date:"2004-01-01", citation_cnt:"2", fields:[{name:"wavelet transform", mag_id:"196216189"}, {name:"wavelet", mag_id:"47432892"}, {name:"scalable video coding", mag_id:"133529210"}, {name:"quarter pixel motion", mag_id:"174493125"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"motion estimation", mag_id:"10161872"}, {name:"motion compensation", mag_id:"128840427"}, {name:"inter frame", mag_id:"39394851"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"coding tree unit", mag_id:"190750250"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"chiayang tsai", mag_id:"2629393198"}, {name:"hankuang hsu", mag_id:"2666430927"}, {name:"hsiangcheh huang", mag_id:"2115711872"}, {name:"hsuehming hang", mag_id:"2125123575"}, {name:"guozua wu", mag_id:"2128547090"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chiayang tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2629393198")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chiayang tsai",MAG_id:"2629393198" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hankuang hsu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2666430927")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hankuang hsu",MAG_id:"2666430927" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="hsiangcheh huang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2115711872")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"hsiangcheh huang",MAG_id:"2115711872" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="guozua wu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2128547090")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"guozua wu",MAG_id:"2128547090" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1997966340" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1997966340", title:"background modeling using depth information", language:"en@@@zh_cht", year:"2014", date:"2014-12-01", citation_cnt:"1", fields:[{name:"recursion", mag_id:"168773036"}, {name:"rgb color model", mag_id:"82990744"}, {name:"iterated function", mag_id:"140479938"}, {name:"depth map", mag_id:"141268832"}, {name:"computer vision", mag_id:"31972630"}, {name:"computer science", mag_id:"41008148"}, {name:"color image", mag_id:"142616399"}, {name:"color histogram", mag_id:"12043971"}, {name:"color depth", mag_id:"91522604"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"yulun liu", mag_id:"2635817218"}, {name:"hsuehming hang", mag_id:"2892913700"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="yulun liu" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2635817218")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"yulun liu",MAG_id:"2635817218" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2892913700")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2076219194" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2076219194", title:"adaptive schemes for motion compensated coding", language:"en", year:"1988", date:"1988-10-25", citation_cnt:"12", fields:[{name:"theoretical computer science", mag_id:"80444323"}, {name:"motion compensation", mag_id:"128840427"}, {name:"inter frame", mag_id:"39394851"}, {name:"image quality", mag_id:"55020928"}, {name:"computer science", mag_id:"41008148"}, {name:"coding", mag_id:"179518139"}, ],authors:[{name:"atul puri", mag_id:"2778379561"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="atul puri" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2778379561")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"atul puri",MAG_id:"2778379561" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1967777804" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1967777804", title:"a relevance feedback image retrieval scheme using multi instance and pseudo image concepts", language:"en@@@zh_cht", year:"2005", date:"2005-01-17", citation_cnt:"4", fields:[{name:"visual word", mag_id:"189391414"}, {name:"upload", mag_id:"71901391"}, {name:"relevance feedback", mag_id:"2779532271"}, {name:"perception", mag_id:"26760741"}, {name:"optical engineering", mag_id:"151857401"}, {name:"machine learning", mag_id:"119857082"}, {name:"information retrieval", mag_id:"23123220"}, {name:"image retrieval", mag_id:"1667742"}, {name:"feature", mag_id:"7374053"}, {name:"computer science", mag_id:"41008148"}, {name:"automatic image annotation", mag_id:"199579030"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"fengcheng chang", mag_id:"2794344490"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="fengcheng chang" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2794344490")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"fengcheng chang",MAG_id:"2794344490" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2863190185" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2863190185", title:"block movement estimation method", language:"en@@@zh_cht", year:"2010", date:"2010-05-26", citation_cnt:"1", fields:[{name:"computer science", mag_id:"41008148"}, ],authors:[{name:"hsuehming hang", mag_id:"2033886786"}, {name:"tzuyi chao", mag_id:"2591209469"}, {name:"changche tsai", mag_id:"2715751250"}, ]})._id;
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2033886786")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tzuyi chao" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2591209469")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tzuyi chao",MAG_id:"2591209469" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="changche tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2715751250")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"changche tsai",MAG_id:"2715751250" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2171143329" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2171143329", title:"direction alignment algorithm for direction adaptive discrete wavelet transform", language:"en@@@zh_cht", year:"2012", date:"2012-03-01", citation_cnt:"0", fields:[{name:"wavelet packet decomposition", mag_id:"155777637"}, {name:"stationary wavelet transform", mag_id:"73339587"}, {name:"second generation wavelet transform", mag_id:"111350171"}, {name:"pattern recognition", mag_id:"178980831"}, {name:"mean squared prediction error", mag_id:"167085575"}, {name:"mathematics", mag_id:"33923547"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"filter", mag_id:"106131492"}, {name:"discrete wavelet transform", mag_id:"46286280"}, {name:"cascade algorithm", mag_id:"88829872"}, {name:"artificial intelligence", mag_id:"154945302"}, {name:"algorithm", mag_id:"11413529"}, ],authors:[{name:"chaohsiung hung", mag_id:"2809972416"}, {name:"hsuehming hang", mag_id:"2125123575"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="chaohsiung hung" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2809972416")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"chaohsiung hung",MAG_id:"2809972416" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    //----- English Name (problem_dict2)-----
    person_id = db._query(`for per in person filter per.name=="杭學鳴" return per._id`).toArray()[0] 
    mids = mids.concat(db._document(person_id)["MAG_id"]) 
    mids.push("2125123575")
    mids = Array.from(new Set(mids.filter( function(e){ return e } )))
    db._update(person_id, {English_name:"hsuehming hang",MAG_id: mids});
    db.author_of.save(person_id,paper_id,{})
}

//----- 紀明德 -----

//----- 蔡宗漢 -----
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1179275490" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1179275490", title:"superdiag a comprehensive test suite for markov chain non convergence", language:"zh_cht", year:"2012", date:"2012-01-01", citation_cnt:"8", fields:[{name:"test suite", mag_id:"151552104"}, {name:"mathematical optimization", mag_id:"126255220"}, {name:"markov chain", mag_id:"98763669"}, {name:"economics", mag_id:"162324750"}, {name:"convergence", mag_id:"71923881"}, ],authors:[{name:"蔡宗漢", mag_id:"2691535381"}, {name:"tsunghan tsai", mag_id:"2495977669"}, {name:"jeff gill", mag_id:"2711360102"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2691535381")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2691535381" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="tsunghan tsai" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2495977669")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"tsunghan tsai",MAG_id:"2495977669" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="jeff gill" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2711360102")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"jeff gill",MAG_id:"2711360102" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2799975189" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2799975189", title:"應用於醫療場域及居家照護之智慧型互動平台 以人工智慧為核心之腦波人機介面開發 i intelligent interactive platform with applications to healthcare and home care development of artificial intelligence based brain computer interface i", language:"zh_cht", year:"2018", date:"2018-01-01", citation_cnt:"0", fields:[{name:"robot", mag_id:"90509273"}, {name:"human computer interaction", mag_id:"107457646"}, {name:"health care", mag_id:"160735492"}, {name:"deep learning", mag_id:"108583219"}, {name:"computer science", mag_id:"41008148"}, {name:"brain computer interface", mag_id:"173201364"}, {name:"artificial intelligence", mag_id:"154945302"}, ],authors:[{name:"王文俊", mag_id:"2801557857"}, {name:"林智揚", mag_id:"2802738281"}, {name:"謝易錚", mag_id:"2800161177"}, {name:"陳翔傑", mag_id:"2801784471"}, {name:"蘇木春", mag_id:"2799650074"}, {name:"施國琛", mag_id:"2803052873"}, {name:"蔡宗漢", mag_id:"2800549157"}, {name:"陳慶瀚", mag_id:"2799658414"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="王文俊" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801557857")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"王文俊",MAG_id:"2801557857" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林智揚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2802738281")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林智揚",MAG_id:"2802738281" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="謝易錚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2800161177")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"謝易錚",MAG_id:"2800161177" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳翔傑" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2801784471")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳翔傑",MAG_id:"2801784471" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蘇木春" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2799650074")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蘇木春",MAG_id:"2799650074" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="施國琛" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2803052873")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"施國琛",MAG_id:"2803052873" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2800549157")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2800549157" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳慶瀚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2799658414")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳慶瀚",MAG_id:"2799658414" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2803052462" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2803052462", title:"智慧電網技術領域問題探討 台俄智慧電網技術之比較與研究 i topical problems of smart grids comparable studies for the conditions of russia and taiwan i", language:"zh_cht", year:"2018", date:"2018-01-01", citation_cnt:"0", fields:[{name:"smart grid", mag_id:"10558101"}, {name:"computer security", mag_id:"38652104"}, {name:"business", mag_id:"144133560"}, {name:"activity recognition", mag_id:"121687571"}, ],authors:[{name:"蔡宗漢", mag_id:"2800563184"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2800563184")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2800563184" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2306214276" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2306214276", title:"bayesian inference for dynamics of slowly changing variables in time series cross sectional data analyses", language:"zh_cht", year:"2011", date:"2011-01-01", citation_cnt:"0", fields:[{name:"statistics", mag_id:"105795698"}, {name:"multilevel model", mag_id:"53059260"}, {name:"geography", mag_id:"205649164"}, {name:"econometrics", mag_id:"149782125"}, {name:"cross sectional data", mag_id:"29169499"}, {name:"bayesian statistics", mag_id:"101112237"}, {name:"bayesian inference", mag_id:"160234255"}, ],authors:[{name:"蔡宗漢", mag_id:"2680975211"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2680975211")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2680975211" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2738262735" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2738262735", title:"應用於智慧城市環境輔助生活之影像偵知系統 ambient assisted living for image context aware system on smart city", language:"zh_cht", year:"2016", date:"2016-08-31", citation_cnt:"0", fields:[{name:"smart city", mag_id:"2777103469"}, {name:"engineering", mag_id:"127413603"}, {name:"computer security", mag_id:"38652104"}, ],authors:[{name:"蔡宗漢", mag_id:"2737507189"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2737507189")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2737507189" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="1957399960" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"1957399960", title:"副總統候選人的選票效應 2004 2012年總統選舉的比較分析", language:"zh_cht", year:"2014", date:"2014-06-01", citation_cnt:"0", fields:[{name:"voting behavior", mag_id:"177324205"}, {name:"voting", mag_id:"520049643"}, {name:"survey data collection", mag_id:"198477413"}, {name:"social psychology", mag_id:"77805123"}, {name:"public relations", mag_id:"39549134"}, {name:"presidential system", mag_id:"197487636"}, {name:"political science", mag_id:"17744445"}, {name:"feeling", mag_id:"122980154"}, {name:"disapproval voting", mag_id:"117763746"}, {name:"democratization", mag_id:"17058734"}, ],authors:[{name:"林長志", mag_id:"2627260399"}, {name:"蔡宗漢", mag_id:"2680593734"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="林長志" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2627260399")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"林長志",MAG_id:"2627260399" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2680593734")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2680593734" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2614926468" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2614926468", title:"應用於智慧生活與照護之節能感測網路 總計畫暨子計畫一 結合物件辨識與視訊壓縮之編解碼器與其人機互動平台 ii joint source and vision human computer interaction platform ii", language:"zh_cht", year:"2013", date:"2013-12-01", citation_cnt:"0", fields:[{name:"human computer interaction", mag_id:"107457646"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"蔡宗漢", mag_id:"2634141953"}, {name:"陳泰蓁", mag_id:"2688384511"}, {name:"薛木添", mag_id:"2672983782"}, {name:"傅家相", mag_id:"2709156665"}, {name:"鄭國興", mag_id:"2717483994"}, {name:"蔡佩芸", mag_id:"2710318070"}, {name:"陳慶瀚", mag_id:"2668052014"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2634141953")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2634141953" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳泰蓁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2688384511")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳泰蓁",MAG_id:"2688384511" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="薛木添" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2672983782")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"薛木添",MAG_id:"2672983782" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="傅家相" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2709156665")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"傅家相",MAG_id:"2709156665" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="鄭國興" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2717483994")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"鄭國興",MAG_id:"2717483994" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡佩芸" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2710318070")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡佩芸",MAG_id:"2710318070" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳慶瀚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2668052014")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳慶瀚",MAG_id:"2668052014" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2383382933" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2383382933", title:"優質化數位家庭之無線視訊傳輸整合系統 總計畫暨子計畫一 適用於數位家庭之多訊源可延展影像壓縮系統設計 iii wireless high definition video interface mobility multiple access and multimedia whdvi m", language:"zh_cht", year:"2012", date:"2012-12-01", citation_cnt:"0", fields:[{name:"wireless", mag_id:"555944384"}, {name:"high definition video", mag_id:"2780236118"}, {name:"embedded system", mag_id:"149635348"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, ],authors:[{name:"蔡宗漢", mag_id:"2655780156"}, {name:"陳慶瀚", mag_id:"2638058144"}, {name:"蔡佩芸", mag_id:"2392629781"}, {name:"傅家相", mag_id:"2610489747"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2655780156")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2655780156" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳慶瀚" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2638058144")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳慶瀚",MAG_id:"2638058144" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡佩芸" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2392629781")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡佩芸",MAG_id:"2392629781" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="傅家相" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2610489747")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"傅家相",MAG_id:"2610489747" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2911344257" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2911344257", title:"適用於數位家庭整合之無線高畫質視訊傳輸技術 i b5155whdvi an wireless high definition video interface technique for digital home", language:"zh_cht", year:"2008", date:"2008-01-01", citation_cnt:"0", fields:[{name:"wireless", mag_id:"555944384"}, {name:"multimedia", mag_id:"49774154"}, {name:"high definition video", mag_id:"2780236118"}, {name:"computer science", mag_id:"41008148"}, ],authors:[{name:"蔡宗漢", mag_id:"2912577421"}, {name:"蔡佩芸", mag_id:"2911381920"}, {name:"陳竹一", mag_id:"2914750825"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2912577421")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2912577421" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡佩芸" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2911381920")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡佩芸",MAG_id:"2911381920" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳竹一" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2914750825")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳竹一",MAG_id:"2914750825" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2413437316" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2413437316", title:"區位推論方法在政治學應用上之限制 區位迴歸 ei模型與bnh模型之比較研究", language:"zh_cht", year:"2007", date:"2007-01-01", citation_cnt:"0", fields:[{name:"survey data collection", mag_id:"198477413"}, {name:"statistics", mag_id:"105795698"}, {name:"standard deviation", mag_id:"22679943"}, {name:"sample size determination", mag_id:"129848803"}, {name:"mathematics", mag_id:"33923547"}, {name:"inference", mag_id:"2776214188"}, {name:"econometrics", mag_id:"149782125"}, {name:"ecological fallacy", mag_id:"75419782"}, {name:"aggregate data", mag_id:"2778058735"}, ],authors:[{name:"蔡宗漢", mag_id:"2641709106"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2641709106")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2641709106" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2615189033" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2615189033", title:"以系統晶片技術實現數位電視廣播接收器並建立其設計平台 子計畫五 數位電視廣播接收器之高效能通道解碼器設計及其平台與晶片製作 iii high performance channel decoding platform design and chip implementation for digital video broadcasting receiver iii", language:"zh_cht", year:"2007", date:"2007-07-01", citation_cnt:"0", fields:[{name:"electronic engineering", mag_id:"24326235"}, {name:"digital video broadcasting", mag_id:"551482933"}, {name:"decoding methods", mag_id:"57273362"}, {name:"computer science", mag_id:"41008148"}, {name:"channel", mag_id:"156996364"}, {name:"chip", mag_id:"165005293"}, ],authors:[{name:"蔡宗漢", mag_id:"2410024280"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2410024280")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2410024280" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2913030183" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2913030183", title:"以系統晶片技術實現數位視訊廣播接收器並建立其設計平台 總計畫 ii soc design of digital video broadcasting receiver and its platform development ii", language:"zh_cht", year:"2006", date:"2006-01-01", citation_cnt:"0", fields:[{name:"digital video broadcasting", mag_id:"551482933"}, {name:"computer science", mag_id:"41008148"}, {name:"computer hardware", mag_id:"9390403"}, ],authors:[{name:"魏慶隆", mag_id:"2914170267"}, {name:"劉建男", mag_id:"2912030879"}, {name:"蔡宗漢", mag_id:"2914282397"}, {name:"張大中", mag_id:"2912592338"}, {name:"周世傑", mag_id:"2914404053"}, {name:"陳逸民", mag_id:"2913847957"}, {name:"薛木添", mag_id:"2912898712"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="魏慶隆" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2914170267")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"魏慶隆",MAG_id:"2914170267" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="劉建男" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2912030879")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"劉建男",MAG_id:"2912030879" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2914282397")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2914282397" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="張大中" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2912592338")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"張大中",MAG_id:"2912592338" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="周世傑" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2914404053")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"周世傑",MAG_id:"2914404053" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳逸民" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2913847957")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳逸民",MAG_id:"2913847957" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="薛木添" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2912898712")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"薛木添",MAG_id:"2912898712" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2726427862" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2726427862", title:"5 gbps資料傳輸收發系統 子計畫i 5 gbps資料傳輸收發系統 系統與架構設計 iii b29325 gbps data link transceiver system architecture design iii", language:"zh_cht", year:"2004", date:"2004-07-01", citation_cnt:"0", fields:[{name:"transceiver", mag_id:"7720470"}, {name:"systems architecture", mag_id:"98025372"}, {name:"data link", mag_id:"182132293"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, ],authors:[{name:"蔡宗漢", mag_id:"2727352737"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2727352737")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2727352737" })._id
    db.author_of.save(person_id,paper_id,{})
}
if (!(paper_id=db._query(`for pap in paper filter pap.MAG_id=="2736000672" return pap._id`).toArray()[0])) {
    paper_id = db.paper.save( { MAG_id:"2736000672", title:"總計畫 5 gbps 資料傳輸收發系統 ii 5 gbps data link transceiver system ii", language:"zh_cht", year:"2003", date:"2003-07-01", citation_cnt:"0", fields:[{name:"transceiver", mag_id:"7720470"}, {name:"data link", mag_id:"182132293"}, {name:"computer science", mag_id:"41008148"}, {name:"computer network", mag_id:"31258907"}, ],authors:[{name:"周世傑", mag_id:"2735194145"}, {name:"陳巍仁", mag_id:"2736172466"}, {name:"蘇朝琴", mag_id:"2736002806"}, {name:"蔡宗漢", mag_id:"2735324599"}, ]})._id;
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="周世傑" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2735194145")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"周世傑",MAG_id:"2735194145" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="陳巍仁" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2736172466")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"陳巍仁",MAG_id:"2736172466" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蘇朝琴" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2736002806")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蘇朝琴",MAG_id:"2736002806" })._id
    db.author_of.save(person_id,paper_id,{})
    var mids = []
    if(person_id = db._query(`for per in person filter per.name=="蔡宗漢" return per._id`).toArray()[0]) {
        mids = mids.concat(db._document(person_id)["MAG_id"]) 
        mids.push("2735324599")
        mids = Array.from(new Set(mids.filter( function(e){ return e } )))
        db._update(person_id, {MAG_id: mids});  }
    else
        person_id = db.person.save({ name:"蔡宗漢",MAG_id:"2735324599" })._id
    db.author_of.save(person_id,paper_id,{})
}

//----- 王家慶 -----

//----- 程登湖 -----

//----- 張俊盛 -----
